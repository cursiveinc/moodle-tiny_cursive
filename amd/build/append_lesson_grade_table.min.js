define("tiny_cursive/append_lesson_grade_table",["exports","./replay","core/ajax","core/templates","./analytic_events","./analytic_button","core/str"],(function(_exports,_replay,_ajax,_templates,_analytic_events,_analytic_button,Str){function _getRequireWildcardCache(nodeInterop){if("function"!=typeof WeakMap)return null;var cacheBabelInterop=new WeakMap,cacheNodeInterop=new WeakMap;return(_getRequireWildcardCache=function(nodeInterop){return nodeInterop?cacheNodeInterop:cacheBabelInterop})(nodeInterop)}function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}
/**
   * Module to append analytics and grade table data for lesson submissions
   * Handles the display of analytics, replay functionality and grade information
   * for lesson submissions in the Moodle gradebook interface
   *
   * @module     tiny_cursive/append_lesson_grade_table
   * @copyright  2025  CTI <info@cursivetechnology.com>
   * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later
   */Object.defineProperty(_exports,"__esModule",{value:!0}),_exports.init=void 0,_replay=_interopRequireDefault(_replay),_templates=_interopRequireDefault(_templates),_analytic_events=_interopRequireDefault(_analytic_events),_analytic_button=_interopRequireDefault(_analytic_button),Str=function(obj,nodeInterop){if(!nodeInterop&&obj&&obj.__esModule)return obj;if(null===obj||"object"!=typeof obj&&"function"!=typeof obj)return{default:obj};var cache=_getRequireWildcardCache(nodeInterop);if(cache&&cache.has(obj))return cache.get(obj);var newObj={},hasPropertyDescriptor=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var key in obj)if("default"!==key&&Object.prototype.hasOwnProperty.call(obj,key)){var desc=hasPropertyDescriptor?Object.getOwnPropertyDescriptor(obj,key):null;desc&&(desc.get||desc.set)?Object.defineProperty(newObj,key,desc):newObj[key]=obj[key]}newObj.default=obj,cache&&cache.set(obj,newObj);return newObj}(Str);_exports.init=scoreSetting=>{const replayInstances={};window.video_playback=function(mid,filepath){if(""!==filepath){const replay=new _replay.default("content"+mid,filepath,10,!1,"player_"+mid);replayInstances[mid]=replay}else _templates.default.render("tiny_cursive/no_submission").then((html=>{const contentElement=document.getElementById("content"+mid);return contentElement&&(contentElement.innerHTML=html),contentElement})).catch((e=>window.console.error(e)));return!1};const cmid=M.cfg.contextInstanceId,emailLinks=document.querySelectorAll('#page-content div[role="main"] td.lastcol a'),headColumns=document.querySelectorAll('#region-main div[role="main"] table thead tr');Str.get_string("analytics","tiny_cursive").then((strs=>(headColumns.forEach((function(row){const secondTh=row.querySelector("th:nth-child(2)");if(secondTh){const newTh=document.createElement("th");newTh.className="header",newTh.innerHTML=strs,secondTh.insertAdjacentElement("afterend",newTh)}})),!0))).catch((e=>window.console.error(e))),emailLinks.forEach((function(emailLink){const href=emailLink.getAttribute("href");let userid=0;if(href){const useridParam=new URLSearchParams(href.split("?")[1]).get("userid");if(userid=useridParam?parseInt(useridParam):0,userid){const args={id:userid,modulename:"lesson",cmid:cmid},methodname="cursive_get_lesson_submission_data",com=(0,_ajax.call)([{methodname:methodname,args:args}]);com[0].done((function(json){const data=JSON.parse(json);let filepath="";data.res.filename&&(filepath=data.res.filename);const analyticButtonDiv=document.createElement("div"),analyticsColumn=document.createElement("td");analyticButtonDiv.append((0,_analytic_button.default)(userid)),analyticButtonDiv.dataset.region="analytic-div"+userid,analyticsColumn.append(analyticButtonDiv);const secondTd=emailLink.closest("tr").querySelector("td:nth-child(2)");secondTd&&secondTd.insertAdjacentElement("afterend",analyticsColumn);const myEvents=new _analytic_events.default,context={tabledata:data.res,formattime:myEvents.formatedTime(data.res),page:scoreSetting,userid:userid},authIcon=myEvents.authorshipStatus(data.res.first_file,data.res.score,scoreSetting);myEvents.createModal(userid,context,"",authIcon),myEvents.analytics(userid,_templates.default,context,"",replayInstances,authIcon),myEvents.checkDiff(userid,data.res.file_id,"",replayInstances),myEvents.replyWriting(userid,filepath,"",replayInstances)})),com[0].fail((error=>{window.console.error("Error getting lesson data:",error)}))}else{const secondTd=emailLink.closest("tr").querySelector("td:nth-child(2)");if(secondTd){const emptyTd=document.createElement("td");secondTd.insertAdjacentElement("afterend",emptyTd)}}}}))}}));

//# sourceMappingURL=append_lesson_grade_table.min.js.map