{"version":3,"file":"replay.min.js","sources":["../src/replay.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * @module     tiny_cursive/replay\n * @category TinyMCE Editor\n * @copyright  CTI <info@cursivetechnology.com>\n * @author Brain Station 23 <elearning@brainstation-23.com>\n */\n\nimport {call as fetchJson} from 'core/ajax';\nimport templates from 'core/templates';\nimport $ from 'jquery';\nimport * as Str from 'core/str';\nexport default class Replay {\n    controllerId = '';\n    controllerId = '';\n    constructor(elementId, filePath, speed = 1, loop = false, controllerId) {\n        this.controllerId = controllerId;\n        this.controllerId = controllerId;\n        this.replayInProgress = false;\n        this.speed = speed;\n        this.loop = loop;\n        const element = document.getElementById(elementId);\n        if (element) {\n            this.outputElement = element;\n        } else {\n            throw new Error(`Element with id '${elementId}' not found`);\n        }\n        if (controllerId) {\n\n            this.constructController(controllerId);\n        }\n        this.loadJSON(filePath)\n            .then((data) => {\n                if (data.status) {\n                    var val = JSON.parse(data.data);\n                    this.logData = val;\n\n                    if (\"data\" in this.logData) {\n                        this.logData = this.logData.data;\n                    }\n                    if (\"payload\" in this.logData) {\n                        this.logData = this.logData.payload;\n                    }\n                    this.startReplay();\n                } else {\n                    templates.render('tiny_cursive/no_submission').then(html => {\n                        let updatedHtml = html.replace('No Submission', \"Something Went Wrong! or File Not Found!\");\n                        document.querySelector('.tiny_cursive').innerHTML = updatedHtml;\n                    });\n                }\n                return data;\n            })\n\n        .catch(error => {\n\n            try {\n               // eslint-disable-next-line\n                Promise.all([\n                    templates.render('tiny_cursive/no_submission'),\n                    Str.get_string('warningpayload', 'tiny_cursive')\n                ])\n                .then(function(results) {\n                    var html = results[0];\n                    var str = results[1];\n                    var newElement = $(html);\n                    newElement.text(str);\n                    $('.tiny_cursive').html(newElement);\n                    return true;\n                })\n                .catch(function(error) {\n                    window.console.error(error);\n                });\n            } catch (error) {\n                window.console.error(error);\n            }\n            window.console.error('Error loading JSON file: ' + error.message);\n        });\n    }\n\n    stopReplay() {\n        if (this.replayInProgress) {\n            clearTimeout(this.replayTimeout);\n            this.replayInProgress = false;\n        }\n    }\n    constructController(controllerId) {\n        const controller = document.getElementById(controllerId);\n\n        if (controller) {\n            this.scrubberElement = document.createElement('input');\n            this.scrubberElement.type = 'range';\n            this.scrubberElement.id = 'timelineScrubber';\n            this.scrubberElement.min = '0';\n            this.scrubberElement.max = '100';\n            this.scrubberElement.addEventListener('input', () => {\n                const scrubberValue = this.scrubberElement.value;\n                this.skipToTime(scrubberValue);\n            });\n            controller.appendChild(this.scrubberElement);\n        }\n    }\n\n    setScrubberVal(value) {\n        if (this.scrubberElement) {\n            this.scrubberElement.value = String(value);\n        }\n    }\n\n    loadJSON(filePath) {\n        return fetchJson([{\n            methodname: 'cursive_get_reply_json',\n            args: {\n                filepath: filePath,\n            },\n        }])[0].done(response => {\n            return response;\n        }).fail(error => {\n            throw new Error('Error loading JSON file: ' + error.message);\n        });\n    }\n\n    // Call this to make a \"start\" or \"start over\" function\n    startReplay() {\n        // Clear previous instances of timeout to prevent multiple running at once\n        if (this.replayInProgress) {\n            clearTimeout(this.replayTimeout);\n        }\n        this.replayInProgress = true;\n        let uid = this.controllerId.split('_')[1];\n        let element = document.getElementById('rep' + uid);\n        let isactive = element.classList.contains('active');\n        if (!isactive) {\n            this.stopReplay();\n        } else {\n            this.outputElement.innerHTML = '';\n        }\n        this.replayLog();\n    }\n\n    // Called by startReplay() to recursively call through keydown events\n    replayLog() {\n        let textOutput = \"\";\n        let index = 0;\n        const processEvent = () => {\n\n            if (this.replayInProgress) {\n                if (index < this.logData.length) {\n                    let event = this.logData[index++];\n                    if (event.event.toLowerCase() === 'keydown') {\n                        textOutput = this.applyKey(event.key, textOutput);\n                    }\n                    this.outputElement.innerHTML = textOutput;\n                    this.setScrubberVal(index / this.logData.length * 100);\n                    this.replayTimeout = setTimeout(processEvent, 1 / this.speed * 100);\n                } else {\n                    this.replayInProgress = false;\n                    if (this.loop) {\n                        this.startReplay();\n                    }\n                }\n            }\n        };\n        processEvent();\n    }\n\n    skipToEnd() {\n        if (this.replayInProgress) {\n            this.replayInProgress = false;\n        }\n        let textOutput = \"\";\n        this.logData.forEach(event => {\n            if (event.event.toLowerCase() === 'keydown') {\n                textOutput = this.applyKey(event.key, textOutput);\n            }\n        });\n        this.outputElement.innerHTML = textOutput.slice(0, -1);\n        this.setScrubberVal(100);\n    }\n\n    // Used by the scrubber to skip to a certain percentage of data\n    skipToTime(percentage) {\n        if (this.replayInProgress) {\n            this.replayInProgress = false;\n        }\n        // Only go through certain % of log data\n        let textOutput = \"\";\n        const numElementsToProcess = Math.ceil(this.logData.length * percentage / 100);\n        for (let i = 0; i < numElementsToProcess; i++) {\n            const event = this.logData[i];\n            if (event.event.toLowerCase() === 'keydown') {\n                textOutput = this.applyKey(event.key, textOutput);\n            }\n        }\n        this.outputElement.innerHTML = textOutput.slice(0, -1);\n        this.setScrubberVal(percentage);\n    }\n\n    // Used in various places to add a keydown, backspace, etc. to the output\n    applyKey(key, textOutput) {\n        switch (key) {\n            case \"Enter\":\n                return textOutput + \"\\n\";\n            case \"Backspace\":\n                return textOutput.slice(0, -1);\n            case \"ControlBackspace\": {\n                let lastSpace = textOutput.lastIndexOf(' ');\n                return textOutput.slice(0, lastSpace);\n            }\n            default:\n                return ![\"Shift\", \"Ctrl\", \"Alt\", \"ArrowDown\", \"ArrowUp\", \"Control\", \"ArrowRight\",\n                    \"ArrowLeft\", \"Meta\", \"CapsLock\", \"Tab\", \"Escape\", \"Delete\", \"PageUp\", \"PageDown\",\n                    \"Insert\", \"Home\", \"End\", \"NumLock\", \"Insert\", \"Home\", \"End\", \"NumLock\", \"AudioVolumeUp\",\n                    \"AudioVolumeDown\", \"MediaPlayPause\", \"F1\", \"F2\", \"F3\", \"F4\", \"F5\", \"F6\", \"F7\", \"F8\", \"F9\",\n                    \"F10\", \"F11\", \"F12\", \"PrintScreen\", \"UnIdentified\"]\n                    .includes(key) ? textOutput + key : textOutput;\n        }\n    }\n}\n"],"names":["controllerId","constructor","elementId","filePath","speed","loop","replayInProgress","element","document","getElementById","Error","outputElement","constructController","loadJSON","then","data","status","val","JSON","parse","logData","this","payload","startReplay","render","html","updatedHtml","replace","querySelector","innerHTML","catch","error","Promise","all","templates","Str","get_string","results","str","newElement","text","window","console","message","stopReplay","clearTimeout","replayTimeout","controller","scrubberElement","createElement","type","id","min","max","addEventListener","scrubberValue","value","skipToTime","appendChild","setScrubberVal","String","methodname","args","filepath","done","response","fail","uid","split","classList","contains","replayLog","textOutput","index","processEvent","length","event","toLowerCase","applyKey","key","setTimeout","skipToEnd","forEach","slice","percentage","numElementsToProcess","Math","ceil","i","lastSpace","lastIndexOf","includes"],"mappings":"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"}