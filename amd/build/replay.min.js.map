{"version":3,"file":"replay.min.js","sources":["../src/replay.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * @module     tiny_cursive/replay\n * @category TinyMCE Editor\n * @copyright  CTI <info@cursivetechnology.com>\n * @author kuldeep singh <mca.kuldeep.sekhon@gmail.com>\n */\n\nimport { call as fetchJson } from 'core/ajax';\nimport templates from 'core/templates';\nimport $ from 'jquery';\nimport * as Str from 'core/str';\n\nexport default class Replay {\n    controllerId = '';\n\n    constructor(elementId, filePath, speed = 1, loop = false, controllerId) {\n        this.controllerId = controllerId;\n        this.replayInProgress = false;\n        this.speed = parseFloat(speed);\n        this.loop = loop;\n        this.highlightedChars = [];\n        this.deletedChars = [];\n        this.cursorPosition = 0;\n        this.currentEventIndex = 0;\n        this.totalEvents = 0;\n        this.currentTime = 0;\n        this.totalDuration = 0;\n        this.usercomments = [];\n        this.pasteTimestamps = [];\n\n        const element = document.getElementById(elementId);\n        if (element) {\n            this.outputElement = element;\n            this.outputElement.style.whiteSpace = 'pre-wrap';\n            this.outputElement.style.wordBreak = 'break-word';\n            this.outputElement.style.maxWidth = '100%';\n            this.outputElement.style.overflow = 'auto';\n            this.outputElement.style.fontFamily = 'monospace';\n            this.outputElement.style.padding = '10px';\n            this.outputElement.style.border = '1px solid #e0e0e0';\n            this.outputElement.style.borderRadius = '4px';\n            this.outputElement.style.minHeight = '100px';\n            this.outputElement.style.backgroundColor = '#fff';\n        } else {\n            throw new Error(`Element with id '${elementId}' not found`);\n        }\n\n        this.loadJSON(filePath)\n            .then((data) => {\n                if (data.status) {\n                    var val = JSON.parse(data.data);\n                    this.logData = val;\n                    if (data.comments) {\n                        var comments = JSON.parse(data.comments);\n                        this.usercomments = Array.isArray(comments) ? [...comments] : [];\n                    }\n                    if (\"data\" in this.logData) {\n                        this.logData = this.logData.data;\n                    }\n                    if (\"payload\" in this.logData) {\n                        this.logData = this.logData.payload;\n                    }\n                    if (this.logData.length > 0 && this.logData[0].unixTimestamp) {\n                        const startTime = this.logData[0].unixTimestamp;\n                        this.logData = this.logData.map(event => ({\n                            ...event,\n                            normalizedTime: event.unixTimestamp - startTime\n                        }));\n                        this.totalDuration = this.logData[this.logData.length - 1].normalizedTime;\n                    }\n                    this.totalEvents = this.logData.length;\n                    this.identifyPasteEvents();\n                    if (controllerId && this.logData) {\n                        this.constructController(controllerId);\n                    }\n                    this.startReplay();\n                } else {\n                    try {\n                        // eslint-disable-next-line\n                        Promise.all([\n                            templates.render('tiny_cursive/no_submission'),\n                            Str.get_string('warningpayload', 'tiny_cursive')\n                        ])\n                            .then(function (results) {\n                                var html = results[0];\n                                var str = results[1];\n                                var updatedHtml = html.replace('No Submission', str);\n                                $('.tiny_cursive').html(updatedHtml);\n                                return true;\n                            })\n                            .catch(function (error) {\n                                window.console.error(error);\n                            });\n                    } catch (error) {\n                        window.console.error(error);\n                    }\n                }\n                return data;\n            })\n            .catch(error => {\n                try {\n                    // eslint-disable-next-line\n                    Promise.all([\n                        templates.render('tiny_cursive/no_submission'),\n                        Str.get_string('warningpayload', 'tiny_cursive')\n                    ])\n                        .then(function (results) {\n                            var html = results[0];\n                            var str = results[1];\n                            var updatedHtml = html.replace('No Submission', str);\n                            $('.tiny_cursive').html(updatedHtml);\n                            return true;\n                        })\n                        .catch(function (error) {\n                            window.console.error(error);\n                        });\n                } catch (error) {\n                    window.console.error(error);\n                }\n                window.console.error('Error loading JSON file: ' + error.message);\n            });\n    }\n\n    stopReplay() {\n        if (this.replayInProgress) {\n            clearTimeout(this.replayTimeout);\n            this.replayInProgress = false;\n            const playSvg = `<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"18\" height=\"18\"\n            viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"white\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\">\n            <polygon points=\"5,3 19,12 5,21\" />\n            </svg>`;\n            if (this.playButton) {\n                this.playButton.querySelector('.play-icon').innerHTML = playSvg;\n            }\n        }\n    }\n\n    constructController(controllerId) {\n        this.replayInProgress = false;\n        this.currentPosition = 0;\n        this.speed = 1;\n        if (this.replayIntervalId) {\n            clearInterval(this.replayIntervalId);\n            this.replayIntervalId = null;\n        }\n        const container = document.getElementById(controllerId);\n        if (!container) {\n            window.console.error(\"Container element not found with ID:\", controllerId);\n            return;\n        }\n        // Clean up any existing controls first\n        const existingControls = container.querySelectorAll('.replay-control');\n        existingControls.forEach(control => control.remove());\n\n        // Check if there's an existing paste events panel\n        const existingPanels = container.querySelectorAll('.paste-events-panel');\n        existingPanels.forEach(panel => panel.remove());\n\n        // Create a container for all controls\n        const controlContainer = document.createElement('div');\n        controlContainer.className = 'replay-control';\n        controlContainer.style.display = 'flex';\n        controlContainer.style.flexDirection = 'column';\n        controlContainer.style.gap = '10px';\n        controlContainer.style.margin = '10px 0';\n        controlContainer.style.alignItems = 'center';\n        controlContainer.style.padding = '10px';\n        controlContainer.style.paddingBottom = '2px';\n        controlContainer.style.borderRadius = '8px';\n        controlContainer.style.backgroundColor = '#f8f9fa';\n        controlContainer.style.boxShadow = '0 2px 8px rgba(0,0,0,0.1)';\n        controlContainer.style.width = '100%';\n\n        // Create first row for play button and scrubber\n        const topRow = document.createElement('div');\n        topRow.style.display = 'flex';\n        topRow.style.width = '100%';\n        topRow.style.gap = '12px';\n        topRow.style.alignItems = 'center';\n\n        // Create play button\n        this.playButton = document.createElement('button');\n        this.playButton.className = 'play-button';\n        this.playButton.style.minWidth = '36px';\n        this.playButton.style.height = '36px';\n        this.playButton.style.borderRadius = '50%';\n        this.playButton.style.background = '#4285f4';\n        this.playButton.style.color = 'white';\n        this.playButton.style.border = 'none';\n        this.playButton.style.cursor = 'pointer';\n        this.playButton.style.display = 'flex';\n        this.playButton.style.alignItems = 'center';\n        this.playButton.style.justifyContent = 'center';\n        this.playButton.style.transition = 'background-color 0.2s, transform 0.1s';\n        this.playButton.style.boxShadow = '0 2px 5px rgba(0,0,0,0.2)';\n        this.playButton.style.flexShrink = '0';\n\n        const playSvg = `<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"18\" height=\"18\"\n        viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"white\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\">\n        <polygon points=\"5,3 19,12 5,21\"></polygon>\n        </svg>`;\n        this.playButton.innerHTML = `<span class=\"play-icon\">${playSvg}</span>`;\n        this.playButton.addEventListener('mouseover', () => {\n            this.playButton.style.background = '#3367d6';\n            this.playButton.style.transform = 'scale(1.05)';\n        });\n        this.playButton.addEventListener('mouseout', () => {\n            this.playButton.style.background = '#4285f4';\n            this.playButton.style.transform = 'scale(1)';\n        });\n        this.playButton.addEventListener('click', () => {\n            if (this.replayInProgress) {\n                this.stopReplay();\n                const playSvg = `<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"18\" height=\"18\"\n                viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"white\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\">\n                <polygon points=\"5,3 19,12 5,21\"></polygon>\n                </svg>`;\n                this.playButton.querySelector('.play-icon').innerHTML = playSvg;\n            } else {\n                this.startReplay(false);\n            }\n        });\n        topRow.appendChild(this.playButton);\n\n        // Create timeline scrubber\n        const scrubberContainer = document.createElement('div');\n        scrubberContainer.style.flexGrow = '1';\n        scrubberContainer.style.width = '100%';\n\n        this.scrubberElement = document.createElement('input');\n        this.scrubberElement.type = 'range';\n        this.scrubberElement.id = 'timelineScrubber';\n        this.scrubberElement.className = 'timeline-scrubber';\n        this.scrubberElement.min = '0';\n        this.scrubberElement.max = '100';\n        this.scrubberElement.value = '0';\n        this.scrubberElement.style.width = '100%';\n        this.scrubberElement.style.height = '8px';\n        this.scrubberElement.style.borderRadius = '4px';\n        this.scrubberElement.style.accentColor = '#4285f4';\n        this.scrubberElement.addEventListener('input', () => {\n            const scrubberValue = parseInt(this.scrubberElement.value, 10);\n            this.skipToTime(scrubberValue);\n        });\n\n        scrubberContainer.appendChild(this.scrubberElement);\n        topRow.appendChild(scrubberContainer);\n\n        // Create second row for speed controls and time display\n        const bottomRow = document.createElement('div');\n        bottomRow.style.display = 'flex';\n        bottomRow.style.width = '100%';\n        bottomRow.style.justifyContent = 'space-between';\n        bottomRow.style.alignItems = 'center';\n        bottomRow.style.marginTop = '5px';\n\n        // Create Speed controls\n        const speedContainer = document.createElement('div');\n        speedContainer.className = 'speed-controls';\n        speedContainer.style.display = 'flex';\n        speedContainer.style.gap = '6px';\n        speedContainer.style.flexShrink = '0';\n        speedContainer.style.alignItems = 'center';\n\n        const speedLabel = document.createElement('span');\n        speedLabel.textContent = 'Speed: ';\n        speedLabel.style.fontSize = '14px';\n        speedLabel.style.fontWeight = '500';\n        speedLabel.style.color = '#333';\n        speedLabel.style.marginRight = '4px';\n        speedContainer.appendChild(speedLabel);\n\n        // Create a single button like container for speed options\n        const speedGroup = document.createElement('div');\n        speedGroup.style.display = 'flex';\n        speedGroup.style.borderRadius = '6px';\n        speedGroup.style.overflow = 'hidden';\n        speedGroup.style.border = '1px solid #e0e0e0';\n\n        [1, 1.5, 2, 5, 10].forEach(speedValue => {\n            const speedBtn = document.createElement('button');\n            speedBtn.textContent = `${speedValue}x`;\n            speedBtn.className = `speed-btn ${parseFloat(speedValue) === parseFloat(this.speed) ? 'active' : ''}`;\n            speedBtn.style.padding = '6px 10px';\n            speedBtn.style.border = 'none';\n            speedBtn.style.borderRight = speedValue !== 10 ? '1px solid #e0e0e0' : 'none';\n            speedBtn.style.background = parseFloat(speedValue) === parseFloat(this.speed) ? '#4285f4' : 'white';\n            speedBtn.style.color = parseFloat(speedValue) === parseFloat(this.speed) ? 'white' : '#333';\n            speedBtn.style.cursor = 'pointer';\n            speedBtn.style.fontSize = '13px';\n            speedBtn.style.fontWeight = '500';\n            speedBtn.style.transition = 'background 0.2s, color 0.2s';\n            speedBtn.dataset.speed = speedValue;\n            speedBtn.addEventListener('mouseover', () => {\n                if (!speedBtn.classList.contains('active')) {\n                    speedBtn.style.background = '#f1f3f4';\n                }\n            });\n            speedBtn.addEventListener('mouseout', () => {\n                if (!speedBtn.classList.contains('active')) {\n                    speedBtn.style.background = 'white';\n                }\n            });\n            speedBtn.addEventListener('click', () => {\n                document.querySelectorAll('.speed-btn').forEach(btn => {\n                    btn.style.background = 'white';\n                    btn.style.color = '#333';\n                    btn.classList.remove('active');\n                });\n                speedBtn.style.background = '#4285f4';\n                speedBtn.style.color = 'white';\n                speedBtn.classList.add('active');\n                this.speed = parseFloat(speedBtn.dataset.speed);\n                // Restart to apply the new speed\n                const wasPlaying = this.replayInProgress;\n                if (wasPlaying) {\n                    this.stopReplay();\n                    this.startReplay(false);\n                }\n            });\n            speedGroup.appendChild(speedBtn);\n        });\n\n        speedContainer.appendChild(speedGroup);\n        bottomRow.appendChild(speedContainer);\n\n        // Add rows to container\n        controlContainer.appendChild(topRow);\n        controlContainer.appendChild(bottomRow);\n\n        // Add time display\n        this.timeDisplay = document.createElement('div');\n        this.timeDisplay.className = 'time-display';\n        this.timeDisplay.textContent = '00:00 / 00:00';\n        this.timeDisplay.style.fontSize = '14px';\n        this.timeDisplay.style.fontFamily = 'sans-serif';\n        this.timeDisplay.style.color = '#333';\n        this.timeDisplay.style.padding = '5px 0';\n        this.timeDisplay.style.flexShrink = '0';\n        this.timeDisplay.style.minWidth = '90px';\n        this.timeDisplay.style.marginLeft = '15px';\n        this.timeDisplay.style.textAlign = 'left';\n\n        topRow.appendChild(this.timeDisplay);\n\n        // Create Paste Events Panel toggle button\n        const pasteEventsToggle = document.createElement('div');\n        pasteEventsToggle.className = 'paste-events-toggle';\n        pasteEventsToggle.style.display = 'flex';\n        pasteEventsToggle.style.alignItems = 'center';\n        pasteEventsToggle.style.cursor = 'pointer';\n        pasteEventsToggle.style.userSelect = 'none';\n        pasteEventsToggle.style.color = '#4285f4';\n        pasteEventsToggle.style.fontFamily = 'sans-serif';\n        pasteEventsToggle.style.fontSize = '14px';\n        pasteEventsToggle.style.fontWeight = '500';\n        pasteEventsToggle.style.marginLeft = 'auto';\n\n        const pasteEventsIcon = document.createElement('span');\n        pasteEventsIcon.innerHTML = `\n        <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"none\" \n             stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\">\n            <path d=\"M16 4h2a2 2 0 0 1 2 2v14a2 2 0 0 1-2 2H6a2 2 0 0 1-2-2V6a2 2 0 0 1 2-2h2\"></path>\n            <rect x=\"8\" y=\"2\" width=\"8\" height=\"4\" rx=\"1\" ry=\"1\"></rect>\n        </svg>`;\n        pasteEventsIcon.style.marginRight = '8px';\n        pasteEventsIcon.style.display = 'flex';\n        pasteEventsIcon.style.alignItems = 'center';\n\n        const pasteEventsText = document.createElement('span');\n        pasteEventsText.textContent = 'Paste Events';\n\n        const pasteEventCount = document.createElement('span');\n        pasteEventCount.textContent = `(${this.usercomments.length})`;\n        pasteEventCount.className = 'paste-event-count';\n        pasteEventCount.style.marginLeft = '2px';\n\n        const chevronIcon = document.createElement('span');\n        chevronIcon.innerHTML = `\n        <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"none\" \n             stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" class=\"chevron-icon\">\n            <polyline points=\"6 9 12 15 18 9\"></polyline>\n        </svg>`;\n        chevronIcon.style.marginLeft = '5px';\n        chevronIcon.style.transition = 'transform 0.3s ease';\n\n        pasteEventsToggle.appendChild(pasteEventsIcon);\n        pasteEventsToggle.appendChild(pasteEventsText);\n        pasteEventsToggle.appendChild(pasteEventCount);\n        pasteEventsToggle.appendChild(chevronIcon);\n\n        // Create Paste Events Panel\n        const pasteEventsPanel = document.createElement('div');\n        pasteEventsPanel.className = 'paste-events-panel';\n        pasteEventsPanel.style.display = 'none';\n        pasteEventsPanel.style.marginTop = '10px';\n        pasteEventsPanel.style.border = '1px solid #e0e0e0';\n        pasteEventsPanel.style.borderRadius = '4px';\n        pasteEventsPanel.style.backgroundColor = '#fff';\n        pasteEventsPanel.style.maxHeight = '300px';\n        pasteEventsPanel.style.overflowY = 'auto';\n        pasteEventsPanel.style.width = '100%';\n\n        this.populatePasteEventsPanel(pasteEventsPanel);\n\n        pasteEventsToggle.addEventListener('click', () => {\n            const isHidden = pasteEventsPanel.style.display === 'none';\n            pasteEventsPanel.style.display = isHidden ? 'block' : 'none';\n            chevronIcon.style.transform = isHidden ? 'rotate(180deg)' : 'rotate(0)';\n        });\n\n        bottomRow.appendChild(pasteEventsToggle);\n\n        controlContainer.appendChild(pasteEventsPanel);\n\n        this.pasteEventsPanel = pasteEventsPanel;\n        this.pasteEventCount = pasteEventCount;\n\n        // Add the controls container to main container\n        container.insertBefore(controlContainer, container.firstChild);\n\n        // Set styles for the output element to handle text wrapping\n        if (this.outputElement) {\n            this.outputElement.style.whiteSpace = 'pre-wrap';\n            this.outputElement.style.wordBreak = 'break-word';\n            this.outputElement.style.maxWidth = '100%';\n            this.outputElement.style.overflow = 'auto';\n            this.outputElement.style.fontFamily = 'monospace';\n            this.outputElement.style.padding = '10px';\n            this.outputElement.style.border = '1px solid #e0e0e0';\n            this.outputElement.style.borderRadius = '4px';\n            this.outputElement.style.minHeight = '100px';\n            this.outputElement.style.backgroundColor = '#fff';\n        }\n\n        // Add persistent styles only once\n        if (!document.getElementById('tiny_cursive-replay-control-styles')) {\n            const styleElement = document.createElement('style');\n            styleElement.id = 'tiny_cursive-replay-control-styles';\n            styleElement.textContent = `\n                .tiny_cursive-replay-control {\n                    margin: 10px 0;\n                    border-radius: 8px;\n                    background-color: #f8f9fa;\n                    box-shadow: 0 2px 8px rgba(0,0,0,0.1);\n                    transition: box-shadow 0.3s ease;\n                    width: 100%;\n                    box-sizing: border-box;\n                }\n    \n                .tiny_cursive-replay-control:hover {\n                    box-shadow: 0 4px 12px rgba(0,0,0,0.15);\n                }\n    \n                .tiny_cursive-highlighted-char {\n                    color: #34a853;\n                    font-weight: bold;\n                    transition: opacity 0.3s ease, color 0.3s ease;\n                }\n    \n                .tiny_cursive-deleted-char {\n                    color: #ea4335;\n                    text-decoration: line-through;\n                    opacity: 0.5;\n                    transition: opacity 0.3s ease;\n                }\n    \n                .tiny_cursive-cursor {\n                    display: inline-block;\n                    width: 2px;\n                    height: 1.2em;\n                    background-color: #4285f4;\n                    animation: tiny_cursive-blink 1s infinite;\n                    vertical-align: middle;\n                    border-radius: 1px;\n                }\n    \n                @keyframes tiny_cursive-blink {\n                    0%, 100% { opacity: 1; }\n                    50% { opacity: 0; }\n                }\n    \n                .tiny_cursive-timeline-scrubber {\n                    width: 100%;\n                    height: 8px;\n                    border-radius: 4px;\n                    appearance: none;\n                    background: #e0e0e0;\n                    transition: background 0.2s;\n                }\n    \n                .tiny_cursive-timeline-scrubber:hover {\n                    background: #d0d0d0;\n                }\n    \n                .tiny_cursive-timeline-scrubber::-webkit-slider-thumb {\n                    appearance: none;\n                    width: 16px;\n                    height: 16px;\n                    border-radius: 50%;\n                    background: #4285f4;\n                    cursor: pointer;\n                    box-shadow: 0 1px 3px rgba(0,0,0,0.2);\n                    transition: transform 0.1s, box-shadow 0.1s;\n                }\n    \n                .tiny_cursive-timeline-scrubber::-webkit-slider-thumb:hover {\n                    transform: scale(1.1);\n                    box-shadow: 0 2px 5px rgba(0,0,0,0.3);\n                }\n    \n                .tiny_cursive-timeline-scrubber::-moz-range-thumb {\n                    width: 16px;\n                    height: 16px;\n                    border-radius: 50%;\n                    background: #4285f4;\n                    cursor: pointer;\n                    box-shadow: 0 1px 3px rgba(0,0,0,0.2);\n                    transition: transform 0.1s;\n                }\n    \n                .tiny_cursive-timeline-scrubber::-moz-range-thumb:hover {\n                    transform: scale(1.1);\n                    box-shadow: 0 2px 5px rgba(0,0,0,0.3);\n                }\n    \n                .tiny_cursive-speed-btn.active {\n                    background: #4285f4 !important;\n                    color: white !important;\n                    font-weight: 500;\n                }\n            `;\n            document.head.appendChild(styleElement);\n        }\n    }\n\n    identifyPasteEvents() {\n        let controlPressed = false;\n        let pasteCount = 0;\n\n        // Check for finding Control+V combinations\n        for (let i = 0; i < this.logData.length; i++) {\n            const event = this.logData[i];\n\n            if (event.event && event.event.toLowerCase() === \"keydown\") {\n                if (event.key === \"Control\") {\n                    controlPressed = true;\n                } else if (event.key === \"v\" && controlPressed) {\n                    const timestamp = event.normalizedTime || 0;\n\n                    this.pasteTimestamps.push({\n                        index: pasteCount,\n                        time: timestamp,\n                        formattedTime: this.formatTime(timestamp)\n                    });\n\n                    pasteCount++;\n                } else {\n                    controlPressed = false;\n                }\n            }\n        }\n\n        // If there are comments but no paste events happened\n        if (this.usercomments.length > 0 && this.pasteTimestamps.length === 0) {\n            for (let i = 0; i < this.usercomments.length; i++) {\n                this.pasteTimestamps.push({\n                    index: i,\n                    time: 0,\n                    formattedTime: this.formatTime(0)\n                });\n            }\n        }\n\n        while (this.pasteTimestamps.length < this.usercomments.length) {\n            const lastIndex = this.pasteTimestamps.length;\n            this.pasteTimestamps.push({\n                index: lastIndex,\n                time: 0,\n                formattedTime: this.formatTime(0)\n            });\n        }\n    }\n\n    populatePasteEventsPanel(panel) {\n        panel.innerHTML = '';\n\n        while (panel.firstChild) {\n            panel.removeChild(panel.firstChild);\n        }\n\n        panel.style.maxHeight = '400px';\n        panel.style.marginBottom = '15px';\n        panel.style.paddingBottom = '10px';\n        panel.style.boxShadow = '0 2px 8px rgba(0,0,0,0.08)';\n\n        const uniqueComments = this.usercomments && this.usercomments.length ?\n            [...new Set(this.usercomments)] : [];\n\n        if (!uniqueComments || uniqueComments.length === 0) {\n            const noCommentsMessage = document.createElement('div');\n            noCommentsMessage.className = 'no-comments-message';\n            noCommentsMessage.textContent = 'No paste events available for this submission.';\n            noCommentsMessage.style.padding = '15px';\n            panel.appendChild(noCommentsMessage);\n            return;\n        }\n\n        if (this.pasteEventCount) {\n            this.pasteEventCount.textContent = `(${uniqueComments.length})`;\n        }\n\n        const carouselContainer = document.createElement('div');\n        carouselContainer.className = 'paste-events-carousel';\n        carouselContainer.style.display = 'flex';\n        carouselContainer.style.flexDirection = 'column';\n        carouselContainer.style.width = '100%';\n        carouselContainer.style.position = 'relative';\n\n        const navigationRow = document.createElement('div');\n        navigationRow.className = 'paste-events-navigation';\n        navigationRow.style.display = 'flex';\n        navigationRow.style.justifyContent = 'space-between';\n        navigationRow.style.alignItems = 'center';\n        navigationRow.style.padding = '10px 15px';\n        navigationRow.style.borderBottom = '1px solid #f0f0f0';\n\n        const counterDisplay = document.createElement('div');\n        counterDisplay.className = 'paste-events-counter';\n        counterDisplay.textContent = 'Event 1 of ' + uniqueComments.length;\n        counterDisplay.style.fontWeight = 'bold';\n        counterDisplay.style.color = '#4285f4';\n\n        const navButtons = document.createElement('div');\n        navButtons.className = 'paste-events-buttons';\n        navButtons.style.display = 'flex';\n        navButtons.style.gap = '10px';\n\n        const prevButton = document.createElement('button');\n        prevButton.className = 'paste-event-prev-btn';\n        prevButton.innerHTML = `\n        <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"none\" \n             stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\">\n            <polyline points=\"15 18 9 12 15 6\"></polyline>\n        </svg>`;\n        prevButton.style.border = 'none';\n        prevButton.style.background = '#f1f3f4';\n        prevButton.style.borderRadius = '50%';\n        prevButton.style.width = '30px';\n        prevButton.style.height = '30px';\n        prevButton.style.display = 'flex';\n        prevButton.style.alignItems = 'center';\n        prevButton.style.justifyContent = 'center';\n        prevButton.style.cursor = 'pointer';\n        prevButton.style.color = '#4285f4';\n        prevButton.style.transition = 'background-color 0.2s';\n        prevButton.disabled = true;\n        prevButton.style.opacity = '0.5';\n\n        const nextButton = document.createElement('button');\n        nextButton.className = 'paste-event-next-btn';\n        nextButton.innerHTML = `\n        <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"none\" \n             stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\">\n            <polyline points=\"9 18 15 12 9 6\"></polyline>\n        </svg>`;\n        nextButton.style.border = 'none';\n        nextButton.style.background = '#f1f3f4';\n        nextButton.style.borderRadius = '50%';\n        nextButton.style.width = '30px';\n        nextButton.style.height = '30px';\n        nextButton.style.display = 'flex';\n        nextButton.style.alignItems = 'center';\n        nextButton.style.justifyContent = 'center';\n        nextButton.style.cursor = 'pointer';\n        nextButton.style.color = '#4285f4';\n        nextButton.style.transition = 'background-color 0.2s';\n        nextButton.disabled = uniqueComments.length <= 1;\n        nextButton.style.opacity = uniqueComments.length <= 1 ? '0.5' : '1';\n\n        prevButton.addEventListener('mouseover', () => {\n            if (!prevButton.disabled) {\n                prevButton.style.background = '#e0e0e0';\n            }\n        });\n        prevButton.addEventListener('mouseout', () => {\n            prevButton.style.background = '#f1f3f4';\n        });\n        nextButton.addEventListener('mouseover', () => {\n            if (!nextButton.disabled) {\n                nextButton.style.background = '#e0e0e0';\n            }\n        });\n        nextButton.addEventListener('mouseout', () => {\n            nextButton.style.background = '#f1f3f4';\n        });\n\n        navButtons.appendChild(prevButton);\n        navButtons.appendChild(nextButton);\n\n        navigationRow.appendChild(counterDisplay);\n        navigationRow.appendChild(navButtons);\n\n        const contentContainer = document.createElement('div');\n        contentContainer.className = 'paste-events-content';\n        contentContainer.style.padding = '15px';\n        contentContainer.style.overflow = 'auto';\n        contentContainer.style.position = 'relative';\n\n        const eventRow = document.createElement('div');\n        eventRow.style.display = 'flex';\n        eventRow.style.justifyContent = 'space-between';\n        eventRow.style.alignItems = 'center';\n        eventRow.style.marginBottom = '10px';\n\n        const commentContainer = document.createElement('div');\n        commentContainer.className = 'paste-event-comment';\n        commentContainer.style.flex = '1';\n        commentContainer.style.paddingRight = '10px';\n        commentContainer.style.wordBreak = 'break-word';\n        commentContainer.textContent = uniqueComments[0];\n\n        const timestampContainer = document.createElement('div');\n        timestampContainer.className = 'paste-event-timestamp';\n        timestampContainer.style.flexShrink = '0';\n        timestampContainer.style.color = '#666';\n        timestampContainer.style.fontSize = '12px';\n        timestampContainer.style.fontFamily = 'monospace';\n        timestampContainer.style.whiteSpace = 'nowrap';\n\n        const timestamp = this.pasteTimestamps && this.pasteTimestamps.length > 0 ?\n            this.pasteTimestamps[0].formattedTime : '00:00';\n\n        timestampContainer.textContent = timestamp;\n\n        eventRow.appendChild(commentContainer);\n        eventRow.appendChild(timestampContainer);\n\n        contentContainer.appendChild(eventRow);\n\n        carouselContainer.appendChild(navigationRow);\n        carouselContainer.appendChild(contentContainer);\n\n        panel.appendChild(carouselContainer);\n\n        let currentIndex = 0;\n\n        prevButton.addEventListener('click', () => {\n            if (currentIndex > 0) {\n                currentIndex--;\n                updateDisplay();\n            }\n        });\n\n        nextButton.addEventListener('click', () => {\n            if (currentIndex < uniqueComments.length - 1) {\n                currentIndex++;\n                updateDisplay();\n            }\n        });\n\n        const updateDisplay = () => {\n            contentContainer.innerHTML = '';\n\n            const newEventRow = document.createElement('div');\n            newEventRow.style.display = 'flex';\n            newEventRow.style.justifyContent = 'space-between';\n            newEventRow.style.alignItems = 'center';\n            newEventRow.style.marginBottom = '10px';\n\n            const newCommentContainer = document.createElement('div');\n            newCommentContainer.className = 'paste-event-comment';\n            newCommentContainer.style.flex = '1';\n            newCommentContainer.style.paddingRight = '10px';\n            newCommentContainer.style.wordBreak = 'break-word';\n            newCommentContainer.textContent = uniqueComments[currentIndex];\n\n            const newTimestampContainer = document.createElement('div');\n            newTimestampContainer.className = 'paste-event-timestamp';\n            newTimestampContainer.style.flexShrink = '0';\n            newTimestampContainer.style.color = '#666';\n            newTimestampContainer.style.fontSize = '12px';\n            newTimestampContainer.style.fontFamily = 'monospace';\n            newTimestampContainer.style.whiteSpace = 'nowrap';\n\n            // Get timestamp for current paste event\n            const timestamp = this.pasteTimestamps && this.pasteTimestamps.length > currentIndex ?\n                this.pasteTimestamps[currentIndex].formattedTime : '00:00';\n\n            newTimestampContainer.textContent = timestamp;\n\n            newEventRow.appendChild(newCommentContainer);\n            newEventRow.appendChild(newTimestampContainer);\n\n            contentContainer.appendChild(newEventRow);\n\n            counterDisplay.textContent = `Event ${currentIndex + 1} of ${uniqueComments.length}`;\n\n            prevButton.disabled = currentIndex === 0;\n            prevButton.style.opacity = currentIndex === 0 ? '0.5' : '1';\n            nextButton.disabled = currentIndex === uniqueComments.length - 1;\n            nextButton.style.opacity = currentIndex === uniqueComments.length - 1 ? '0.5' : '1';\n        };\n    }\n\n    setScrubberVal(value) {\n        if (this.scrubberElement) {\n            this.scrubberElement.value = String(value);\n\n            if (this.timeDisplay) {\n                const displayTime = Math.min(this.currentTime, this.totalDuration);\n                const currentTimeFormatted = this.formatTime(displayTime);\n                const totalTimeFormatted = this.formatTime(this.totalDuration);\n                this.timeDisplay.textContent = `${currentTimeFormatted} / ${totalTimeFormatted}`;\n            }\n        }\n    }\n\n    loadJSON(filePath) {\n        return fetchJson([{\n            methodname: 'cursive_get_reply_json',\n            args: {\n                filepath: filePath,\n            },\n        }])[0].done(response => {\n            return response;\n        }).fail(error => {\n            throw new Error('Error loading JSON file: ' + error.message);\n        });\n    }\n\n    formatTime(ms) {\n        const seconds = Math.floor(ms / 1000);\n        const minutes = Math.floor(seconds / 60);\n        const remainingSeconds = seconds % 60;\n        return `${minutes.toString().padStart(2, '0')}:${remainingSeconds.toString().padStart(2, '0')}`;\n    }\n\n    // Call this to make a \"start\" or \"start over\" function\n    startReplay(reset = true) {\n        // Clear previous instances of timeout to prevent multiple running at once\n        if (this.replayInProgress) {\n            clearTimeout(this.replayTimeout);\n        }\n        const atEnd = (this.totalDuration > 0 && this.currentTime >= this.totalDuration) ||\n            (this.currentEventIndex >= this.totalEvents);\n        if (atEnd && !reset) {\n            reset = true;\n        }\n        this.replayInProgress = true;\n        if (reset) {\n            this.outputElement.innerHTML = '';\n            this.text = '';\n            this.cursorPosition = 0;\n            this.currentEventIndex = 0;\n            this.currentTime = 0;\n            this.highlightedChars = [];\n            this.deletedChars = [];\n            this.isControlKeyPressed = false;\n        }\n        if (this.playButton) {\n            const pauseSvg = `<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"18\" height=\"18\"\n            viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"white\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\">\n            <line x1=\"9\" y1=\"4\" x2=\"9\" y2=\"20\"></line>\n            <line x1=\"15\" y1=\"4\" x2=\"15\" y2=\"20\"></line>\n            </svg>`;\n            this.playButton.querySelector('.play-icon').innerHTML = pauseSvg;\n        }\n        this.replayLog();\n    }\n\n    // Called by startReplay() to recursively call through keydown events\n    replayLog() {\n        if (!this.replayInProgress) {\n            this.updateDisplayText(this.text, this.cursorPosition, [], []);\n            return;\n        }\n\n        while (this.currentEventIndex < this.logData.length) {\n            const event = this.logData[this.currentEventIndex];\n\n            if (event.normalizedTime && event.normalizedTime > this.currentTime) {\n                break;\n            }\n\n            let text = this.text || '';\n            let cursor = this.cursorPosition || 0;\n            let updatedHighlights = [...this.highlightedChars];\n            let updatedDeleted = [...this.deletedChars];\n\n            // Always update cursor position based on rePosition if available\n            if (event.rePosition !== undefined) {\n                cursor = Math.max(0, Math.min(event.rePosition, text.length));\n            }\n\n            if (event.event && event.event.toLowerCase() === \"keydown\") {\n                const charToInsert = this.applyKey(event.key);\n\n                if (event.key === \"Control\") {\n                    this.isControlKeyPressed = true;\n                }\n                else if (event.key !== \"v\") {\n                    if (event.key !== \"Control\") {\n                        this.isControlKeyPressed = false;\n                    }\n                }\n                if (event.key === \"Backspace\" && this.isControlKeyPressed) {\n                    // Handle Control+Backspace word deletion\n                    if (cursor > 0) {\n                        let wordStart = cursor;\n                        while (wordStart > 0 && text[wordStart - 1] === ' ') {\n                            wordStart--;\n                        }\n                        while (wordStart > 0 && text[wordStart - 1] !== ' ') {\n                            wordStart--;\n                        }\n\n                        const wordToDelete = text.substring(wordStart, cursor);\n                        for (let i = 0; i < wordToDelete.length; i++) {\n                            updatedDeleted.push({\n                                index: wordStart + i,\n                                char: wordToDelete[i],\n                                time: this.currentTime,\n                                expiresAt: this.currentTime + 2000\n                            });\n                        }\n                        // Remove the word\n                        text = text.substring(0, wordStart) + text.substring(cursor);\n                        cursor = wordStart;\n                    }\n                    this.isControlKeyPressed = false;\n                }\n                else if (event.key === \"Backspace\") {\n                    if (cursor > 0) {\n                        // Store the character being deleted\n                        updatedDeleted.push({\n                            index: cursor - 1,\n                            char: text[cursor - 1],\n                            time: this.currentTime,\n                            expiresAt: this.currentTime + 2000 // Make deletions visible for 2 seconds\n                        });\n                        // Remove the character before cursor\n                        text = text.substring(0, cursor - 1) + text.substring(cursor);\n                        cursor--;\n                    }\n                }\n                else if (event.key === \"ArrowLeft\") {\n                    cursor = Math.max(0, cursor - 1);\n                }\n                else if (event.key === \"ArrowRight\") {\n                    cursor = Math.min(text.length, cursor + 1);\n                }\n                else if (charToInsert !== null && charToInsert !== \"\") {\n                    // Insert the character at cursor position\n                    text = text.substring(0, cursor) + charToInsert + text.substring(cursor);\n                    // Highlight non-space characters\n                    if (charToInsert.trim() !== \"\") {\n                        updatedHighlights.push({\n                            index: cursor,\n                            char: charToInsert,\n                            time: this.currentTime,\n                            expiresAt: this.currentTime + 1500 // Make highlights visible for 1.5 seconds\n                        });\n                    }\n                    cursor++;\n                }\n            }\n\n            this.text = text;\n            this.cursorPosition = cursor;\n\n            // Filter out expired highlights and deletions\n            this.highlightedChars = updatedHighlights.filter(h =>\n                !h.expiresAt || h.expiresAt > this.currentTime\n            );\n\n            this.deletedChars = updatedDeleted.filter(d =>\n                !d.expiresAt || d.expiresAt > this.currentTime\n            );\n\n            this.currentEventIndex++;\n        }\n\n        this.updateDisplayText(this.text, this.cursorPosition, this.highlightedChars, this.deletedChars);\n\n        // Update timeline\n        if (this.totalDuration > 0) {\n            const percentComplete = Math.min((this.currentTime / this.totalDuration) * 100, 100);\n            this.setScrubberVal(percentComplete);\n        }\n\n        // Continue or stop replay\n        if (this.replayInProgress) {\n            const baseIncrement = 100;\n            const incrementTime = baseIncrement / this.speed;\n            this.currentTime += baseIncrement;\n\n            if (this.currentEventIndex >= this.totalEvents) {\n                if (this.loop) {\n                    this.startReplay(true);\n                } else {\n                    this.stopReplay();\n                    this.updateDisplayText(this.text, this.cursorPosition, [], []);\n                }\n            } else {\n                this.replayTimeout = setTimeout(() => this.replayLog(), incrementTime);\n            }\n        }\n    }\n\n    skipToEnd() {\n        if (this.replayInProgress) {\n            this.replayInProgress = false;\n        }\n        let textOutput = \"\";\n        this.logData.forEach(event => {\n            if (event.event.toLowerCase() === 'keydown') {\n                textOutput = this.applyKey(event.key, textOutput);\n            }\n        });\n        this.outputElement.innerHTML = textOutput.slice(0, -1);\n        this.setScrubberVal(100);\n    }\n\n    // Used by the scrubber to skip to a certain percentage of data\n    skipToTime(percentage) {\n        const wasPlaying = this.replayInProgress;\n        if (wasPlaying) {\n            this.replayInProgress = false;\n            clearTimeout(this.replayTimeout);\n        }\n\n        const targetTime = (this.totalDuration * percentage) / 100;\n        this.currentTime = targetTime;\n        this.currentEventIndex = 0;\n        this.text = '';\n        this.cursorPosition = 0;\n        this.highlightedChars = [];\n        this.deletedChars = [];\n        this.isControlKeyPressed = false;\n\n        let text = '';\n        let cursor = 0;\n\n        for (let i = 0; i < this.logData.length; i++) {\n            const event = this.logData[i];\n            if (event.normalizedTime && event.normalizedTime > targetTime) {\n                this.currentEventIndex = i;\n                break;\n            }\n\n            if (event.rePosition !== undefined) {\n                cursor = Math.max(0, Math.min(event.rePosition, text.length));\n            }\n\n            if (event.event && event.event.toLowerCase() === \"keydown\") {\n                const charToInsert = this.applyKey(event.key);\n\n                if (event.key === \"Control\") {\n                    this.isControlKeyPressed = true;\n                }\n                else if (event.key !== \"v\") {\n                    if (event.key !== \"Control\") {\n                        this.isControlKeyPressed = false;\n                    }\n                }\n                if (event.key === \"Backspace\" && this.isControlKeyPressed) {\n                    if (cursor > 0) {\n                        let wordStart = cursor;\n                        while (wordStart > 0 && text[wordStart - 1] === ' ') {\n                            wordStart--;\n                        }\n                        while (wordStart > 0 && text[wordStart - 1] !== ' ') {\n                            wordStart--;\n                        }\n\n                        const wordToDelete = text.substring(wordStart, cursor);\n                        for (let i = 0; i < wordToDelete.length; i++) {\n                            this.deletedChars.push({\n                                index: wordStart + i,\n                                char: wordToDelete[i],\n                                time: targetTime,\n                                expiresAt: targetTime + 2000\n                            });\n                        }\n\n                        text = text.substring(0, wordStart) + text.substring(cursor);\n                        cursor = wordStart;\n                    }\n                    this.isControlKeyPressed = false;\n                }\n                else if (event.key === \"Backspace\") {\n                    if (cursor > 0) {\n                        this.deletedChars.push({\n                            index: cursor - 1,\n                            char: text[cursor - 1],\n                            time: targetTime,\n                            expiresAt: targetTime + 1000\n                        });\n                        text = text.substring(0, cursor - 1) + text.substring(cursor);\n                        cursor = Math.max(0, cursor - 1);\n                    }\n                }\n                else if (event.key === \"ArrowLeft\") {\n                    cursor = Math.max(0, cursor - 1);\n                }\n                else if (event.key === \"ArrowRight\") {\n                    cursor = Math.min(text.length, cursor + 1);\n                }\n                else if (charToInsert && charToInsert.length > 0) {\n                    text = text.substring(0, cursor) + charToInsert + text.substring(cursor);\n                    if (charToInsert.trim() !== \"\") {\n                        this.highlightedChars.push({\n                            index: cursor,\n                            char: charToInsert,\n                            time: targetTime,\n                            expiresAt: targetTime + 1000\n                        });\n                    }\n                    cursor++;\n                }\n            }\n\n            this.currentEventIndex = i + 1;\n        }\n\n        this.text = text;\n        this.cursorPosition = cursor;\n        this.updateDisplayText(text, cursor, this.highlightedChars, this.deletedChars);\n        this.setScrubberVal(percentage);\n\n        if (wasPlaying) {\n            this.replayInProgress = true;\n            this.replayLog();\n        }\n    }\n\n\n    // Update display with text, cursor, highlights and deletions\n    updateDisplayText(text, cursorPosition, highlights, deletions) {\n        let html = '';\n        const highlightMap = {};\n        const deletionMap = {};\n        const currentTime = this.currentTime;\n\n        highlights.forEach(h => {\n            let opacity = 1;\n            if (h.expiresAt) {\n                const timeRemaining = h.expiresAt - currentTime;\n                if (timeRemaining < 500) {\n                    opacity = Math.max(0, timeRemaining / 500);\n                }\n            }\n            highlightMap[h.index] = { char: h.char, opacity: opacity };\n        });\n\n        deletions.forEach(d => {\n            let opacity = 0.5;\n            if (d.expiresAt) {\n                const timeRemaining = d.expiresAt - currentTime;\n                if (timeRemaining < 500) {\n                    opacity = Math.max(0, (timeRemaining / 500) * 0.5);\n                }\n            }\n            deletionMap[d.index] = { char: d.char, opacity: opacity };\n        });\n\n        // Find if we have out-of-bounds deletions (from Control+Backspace)\n        const outOfRangeDeletions = deletions.filter(d => d.index >= text.length);\n\n        const textLines = text.split('\\n');\n        let currentPosition = 0;\n\n        for (let lineIndex = 0; lineIndex < textLines.length; lineIndex++) {\n            const line = textLines[lineIndex];\n\n            for (let i = 0; i < line.length; i++) {\n                if (currentPosition === cursorPosition) {\n                    html += '<span class=\"tiny_cursive-cursor\">|</span>';\n                }\n\n                const char = line[i];\n\n                if (deletionMap[currentPosition]) {\n                    const deletion = deletionMap[currentPosition];\n                    html += `<span class=\"tiny_cursive-deleted-char\" style=\"opacity: ${deletion.opacity};\">${deletion.char}</span>`;\n                }\n\n                if (highlightMap[currentPosition] && char !== ' ') {\n                    const highlight = highlightMap[currentPosition];\n                    html += `<span class=\"tiny_cursive-highlighted-char\" style=\"opacity: ${highlight.opacity};\">${char}</span>`;\n                } else {\n                    html += char === ' ' ? '&nbsp;' : this.escapeHtml(char);\n                }\n\n                currentPosition++;\n            }\n\n            if (currentPosition === cursorPosition) {\n                html += '<span class=\"tiny_cursive-cursor\">|</span>';\n            }\n\n            if (lineIndex < textLines.length - 1) {\n                html += '<br>';\n                currentPosition++;\n            }\n        }\n\n        if (cursorPosition === text.length && !html.endsWith('<span class=\"tiny_cursive-cursor\">|</span>')) {\n            html += '<span class=\"tiny_cursive-cursor\">|</span>';\n        }\n\n        // For control + backspace functionalities\n        if (outOfRangeDeletions.length > 0) {\n            outOfRangeDeletions.sort((a, b) => a.index - b.index);\n\n            const cursorHTML = '<span class=\"tiny_cursive-cursor\">|</span>';\n            let cursorPos = html.lastIndexOf(cursorHTML);\n\n            if (cursorPos !== -1) {\n                let deletedWordHTML = '<span class=\"tiny_cursive-deleted-char\" style=\"opacity: 0.5;\">';\n                outOfRangeDeletions.forEach(d => {\n                    deletedWordHTML += d.char;\n                });\n                deletedWordHTML += '</span>';\n                html = html.substring(0, cursorPos) + deletedWordHTML + html.substring(cursorPos);\n            }\n        }\n\n        const wasScrolledToBottom = this.outputElement.scrollHeight -\n            this.outputElement.clientHeight <= this.outputElement.scrollTop + 1;\n\n        this.outputElement.innerHTML = html;\n\n        if (wasScrolledToBottom || this.isCursorBelowViewport()) {\n            this.outputElement.scrollTop = this.outputElement.scrollHeight;\n        }\n    }\n\n    // Check if cursor is below visible viewport\n    isCursorBelowViewport() {\n        const cursorElement = this.outputElement.querySelector('.tiny_cursive-cursor:last-of-type');\n        if (!cursorElement) {\n            return false;\n        }\n\n        const cursorRect = cursorElement.getBoundingClientRect();\n        const outputRect = this.outputElement.getBoundingClientRect();\n\n        return cursorRect.bottom > outputRect.bottom;\n    }\n\n    escapeHtml(unsafe) {\n        return unsafe\n            .replace(/&/g, \"&amp;\")\n            .replace(/</g, \"&lt;\")\n            .replace(/>/g, \"&gt;\")\n            .replace(/\"/g, \"&quot;\")\n            .replace(/'/g, \"&#039;\");\n    }\n\n    // Used in various places to add a keydown, backspace, etc. to the output\n    applyKey(key) {\n        switch (key) {\n            case \"Enter\":\n                return \"\\n\";\n            case \"Backspace\":\n                return \"\";\n            case \"ControlBackspace\":\n                return \"\";\n            case \" \":\n                return \" \";\n            default:\n                return ![\"Shift\", \"Ctrl\", \"Alt\", \"ArrowDown\", \"ArrowUp\", \"Control\", \"ArrowRight\",\n                    \"ArrowLeft\", \"Meta\", \"CapsLock\", \"Tab\", \"Escape\", \"Delete\", \"PageUp\", \"PageDown\",\n                    \"Insert\", \"Home\", \"End\", \"NumLock\"]\n                    .includes(key) ? key : \"\";\n        }\n    }\n}"],"names":["constructor","elementId","filePath","speed","loop","controllerId","replayInProgress","parseFloat","highlightedChars","deletedChars","cursorPosition","currentEventIndex","totalEvents","currentTime","totalDuration","usercomments","pasteTimestamps","element","document","getElementById","Error","outputElement","style","whiteSpace","wordBreak","maxWidth","overflow","fontFamily","padding","border","borderRadius","minHeight","backgroundColor","loadJSON","then","data","status","val","JSON","parse","logData","comments","Array","isArray","this","payload","length","unixTimestamp","startTime","map","event","normalizedTime","identifyPasteEvents","constructController","startReplay","Promise","all","templates","render","Str","get_string","results","html","str","updatedHtml","replace","catch","error","window","console","message","stopReplay","clearTimeout","replayTimeout","playSvg","playButton","querySelector","innerHTML","currentPosition","replayIntervalId","clearInterval","container","querySelectorAll","forEach","control","remove","panel","controlContainer","createElement","className","display","flexDirection","gap","margin","alignItems","paddingBottom","boxShadow","width","topRow","minWidth","height","background","color","cursor","justifyContent","transition","flexShrink","addEventListener","transform","appendChild","scrubberContainer","flexGrow","scrubberElement","type","id","min","max","value","accentColor","scrubberValue","parseInt","skipToTime","bottomRow","marginTop","speedContainer","speedLabel","textContent","fontSize","fontWeight","marginRight","speedGroup","speedValue","speedBtn","borderRight","dataset","classList","contains","btn","add","timeDisplay","marginLeft","textAlign","pasteEventsToggle","userSelect","pasteEventsIcon","pasteEventsText","pasteEventCount","chevronIcon","pasteEventsPanel","maxHeight","overflowY","populatePasteEventsPanel","isHidden","insertBefore","firstChild","styleElement","head","controlPressed","pasteCount","i","toLowerCase","key","timestamp","push","index","time","formattedTime","formatTime","lastIndex","removeChild","marginBottom","uniqueComments","Set","noCommentsMessage","carouselContainer","position","navigationRow","borderBottom","counterDisplay","navButtons","prevButton","disabled","opacity","nextButton","contentContainer","eventRow","commentContainer","flex","paddingRight","timestampContainer","currentIndex","updateDisplay","newEventRow","newCommentContainer","newTimestampContainer","setScrubberVal","String","displayTime","Math","currentTimeFormatted","totalTimeFormatted","methodname","args","filepath","done","response","fail","ms","seconds","floor","minutes","remainingSeconds","toString","padStart","reset","text","isControlKeyPressed","pauseSvg","replayLog","updatedHighlights","updatedDeleted","undefined","rePosition","charToInsert","applyKey","wordStart","wordToDelete","substring","char","expiresAt","trim","filter","h","d","updateDisplayText","percentComplete","baseIncrement","incrementTime","setTimeout","skipToEnd","textOutput","slice","percentage","wasPlaying","targetTime","highlights","deletions","highlightMap","deletionMap","timeRemaining","outOfRangeDeletions","textLines","split","lineIndex","line","deletion","highlight","escapeHtml","endsWith","sort","a","b","cursorHTML","cursorPos","lastIndexOf","deletedWordHTML","wasScrolledToBottom","scrollHeight","clientHeight","scrollTop","isCursorBelowViewport","cursorElement","cursorRect","getBoundingClientRect","outputRect","bottom","unsafe","includes"],"mappings":"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"}