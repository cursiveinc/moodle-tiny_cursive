{"version":3,"file":"analytic_events.min.js","sources":["../src/analytic_events.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Module for handling analytics events in the Tiny Cursive plugin.\n * Provides functionality for displaying analytics data, replaying writing,\n * checking differences and showing quality metrics.\n *\n * @module     tiny_cursive/analytic_events\n * @copyright  2024 CTI <info@cursivetechnology.com>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\nimport myModal from \"./analytic_modal\";\nimport {call as getContent} from \"core/ajax\";\nimport $ from 'jquery';\nimport {get_string as getString} from 'core/str';\nimport {get_strings as getStrings} from 'core/str';\nimport Chart from 'core/chartjs';\n\nexport default class AnalyticEvents {\n\n    createModal(userid, context, questionid = '', authIcon) {\n        const element = document.getElementById('analytics' + userid + questionid);\n        if (element) {\n            element.addEventListener('click', function (e) {\n                e.preventDefault();\n\n                // Create Moodle modal\n                myModal.create({ templateContext: context }).then(modal => {\n                    const content = document.querySelector('#content' + userid + ' .table tbody tr:first-child td:nth-child(2)');\n                    if (content) content.innerHTML = authIcon.outerHTML;\n                    modal.show();\n                }).catch(error => {\n                    window.console.error(\"Failed to create modal:\", error);\n                });\n            });\n        }\n    }\n\n    analytics(userid, templates, context, questionid = '', replayInstances = null, authIcon) {\n        document.body.addEventListener('click', function (e) {\n            if (e.target && e.target.id === 'analytic' + userid + questionid) {\n\n                const repElement = document.getElementById('rep' + userid + questionid);\n                if (repElement.getAttribute('disabled') === 'true') repElement.setAttribute('disabled', 'false');\n\n                e.preventDefault();\n\n                const content = document.getElementById('content' + userid);\n                if (content) {\n                    content.innerHTML = '';\n                    const loaderDiv = document.createElement('div');\n                    loaderDiv.className = 'd-flex justify-content-center my-5';\n                    const loader = document.createElement('div');\n                    loader.className = 'tiny_cursive-loader';\n                    loaderDiv.appendChild(loader);\n                    content.appendChild(loaderDiv);\n                }\n\n                if (replayInstances && replayInstances[userid]) {\n                    replayInstances[userid].stopReplay();\n                }\n\n                document.querySelectorAll('.tiny_cursive-nav-tab .active').forEach(el => el.classList.remove('active'));\n                e.target.classList.add('active');\n\n                templates.render('tiny_cursive/analytics_table', context).then(function (html) {\n                    const content = document.getElementById('content' + userid);\n                    if (content) content.innerHTML = html;\n                    const firstCell = document.querySelector('#content' + userid + ' .table tbody tr:first-child td:nth-child(2)');\n                    if (firstCell) firstCell.innerHTML = authIcon.outerHTML;\n                }).catch(function (error) {\n                    window.console.error(\"Failed to render template:\", error);\n                });\n            }\n        });\n    }\n\n    checkDiff(userid, fileid, questionid = '', replayInstances = null) {\n        const nodata = document.createElement('p');\n        nodata.className = 'text-center p-5 bg-light rounded m-5 text-primary';\n        nodata.style.verticalAlign = 'middle';\n        nodata.style.textTransform = 'uppercase';\n        nodata.style.fontWeight = '500';\n        nodata.textContent = \"no data received yet\";\n\n        document.body.addEventListener('click', function (e) {\n            if (e.target && e.target.id === 'diff' + userid + questionid) {\n\n                const repElement = document.getElementById('rep' + userid + questionid);\n                if (repElement.getAttribute('disabled') === 'true') repElement.setAttribute('disabled', 'false');\n\n                e.preventDefault();\n\n                const content = document.getElementById('content' + userid);\n                if (content) {\n                    content.innerHTML = '';\n                    const loaderDiv = document.createElement('div');\n                    loaderDiv.className = 'd-flex justify-content-center my-5';\n                    const loader = document.createElement('div');\n                    loader.className = 'tiny_cursive-loader';\n                    loaderDiv.appendChild(loader);\n                    content.appendChild(loaderDiv);\n                }\n\n                document.querySelectorAll('.tiny_cursive-nav-tab .active').forEach(el => el.classList.remove('active'));\n                e.target.classList.add('active');\n\n                if (replayInstances && replayInstances[userid]) {\n                    replayInstances[userid].stopReplay();\n                }\n\n                if (!fileid) {\n                    const content = document.getElementById('content' + userid);\n                    if (content) content.innerHTML = nodata.outerHTML;\n                    throw new Error('Missing file id or Difference Content not received yet');\n                }\n\n                getContent([{\n                    methodname: 'cursive_get_writing_differences',\n                    args: { fileid: fileid },\n                }])[0].done(response => {\n                    let responsedata = JSON.parse(response.data);\n                    if (responsedata) {\n                        let submittedText = atob(responsedata.submitted_text);\n\n                        // Fetch the dynamic strings\n                        Str.get_strings([\n                            { key: 'original_text', component: 'tiny_cursive' },\n                            { key: 'editspastesai', component: 'tiny_cursive' }\n                        ]).done(strings => {\n                            const originalTextString = strings[0];\n                            const editsPastesAIString = strings[1];\n\n                            const commentBox = document.createElement('div');\n                            commentBox.className = 'p-2 border rounded mb-2';\n\n                            const pasteCountDiv = document.createElement('div');\n                            pasteCountDiv.innerHTML = `<div><strong>Paste Count :</strong> ${responsedata.commentscount}</div>`;\n\n                            const commentsDiv = document.createElement('div');\n                            commentsDiv.className = 'border-bottom';\n                            commentsDiv.innerHTML = '<strong>Comments :</strong>';\n\n                            const commentsList = document.createElement('div');\n\n                            const comments = responsedata.comments;\n                            for (let index in comments) {\n                                const commentDiv = document.createElement('div');\n                                commentDiv.className = 'shadow-sm p-1 my-1';\n                                commentDiv.textContent = comments[index].usercomment;\n                                commentsList.appendChild(commentDiv);\n                            }\n\n                            commentBox.appendChild(pasteCountDiv);\n                            commentBox.appendChild(commentsDiv);\n                            commentBox.appendChild(commentsList);\n\n                            \n                            const legend = document.createElement('div');\n                            legend.className = 'd-flex p-2 border rounded mb-2';\n\n                            // Create the first legend item\n                            const attributedItem = document.createElement('div');\n                            attributedItem.className = 'tiny_cursive-legend-item';\n                            const attributedBox = document.createElement('div');\n                            attributedBox.className = 'tiny_cursive-box attributed';\n                            const attributedText = document.createElement('span');\n                            attributedText.textContent = originalTextString;\n                            attributedItem.appendChild(attributedBox);\n                            attributedItem.appendChild(attributedText);\n\n                            // Create the second legend item\n                            const unattributedItem = document.createElement('div');\n                            unattributedItem.className = 'tiny_cursive-legend-item';\n                            const unattributedBox = document.createElement('div');\n                            unattributedBox.className = 'tiny_cursive-box tiny_cursive_added';\n                            const unattributedText = document.createElement('span');\n                            unattributedText.textContent = editsPastesAIString;\n                            unattributedItem.appendChild(unattributedBox);\n                            unattributedItem.appendChild(unattributedText);\n\n                            // Append the legend items to the legend container\n                            legend.appendChild(attributedItem);\n                            legend.appendChild(unattributedItem);\n\n                            let contents = document.createElement('div');\n                            contents.className = 'tiny_cursive-comparison-content';\n                            let textBlock2 = document.createElement('div');\n                            textBlock2.className = 'tiny_cursive-text-block';\n                            textBlock2.innerHTML = `<div id=\"tiny_cursive-reconstructed_text\">${JSON.parse(submittedText)}</div>`;\n                            \n                            contents.appendChild(commentBox);\n                            contents.appendChild(legend);\n                            contents.appendChild(textBlock2);\n\n                            const content = document.getElementById('content' + userid);\n                            if (content) content.innerHTML = contents.outerHTML;\n                        }).catch(error => {\n                            window.console.error(\"Failed to load language strings:\", error);\n                            const content = document.getElementById('content' + userid);\n                            if (content) content.innerHTML = nodata.outerHTML;\n                        });\n                    } else {\n                        const content = document.getElementById('content' + userid);\n                        if (content) content.innerHTML = nodata.outerHTML;\n                    }\n                }).catch(error => {\n                    const content = document.getElementById('content' + userid);\n                    if (content) content.innerHTML = nodata.outerHTML;\n                    throw new Error('Error loading JSON file: ' + error.message);\n                });\n            }\n        });\n    }\n\n    replyWriting(userid, filepath, questionid = '', replayInstances = null) {\n        document.body.addEventListener('click', function (e) {\n            if (e.target && e.target.id === 'rep' + userid + questionid) {\n                let replyBtn = document.getElementById('rep' + userid + questionid);\n\n                if (replyBtn.getAttribute('disabled') == 'true') return;\n                replyBtn.setAttribute('disabled', 'true');\n\n                e.preventDefault();\n\n                const content = document.getElementById('content' + userid);\n                if (content) {\n                    content.innerHTML = '';\n                    const loaderDiv = document.createElement('div');\n                    loaderDiv.className = 'd-flex justify-content-center my-5';\n                    const loader = document.createElement('div');\n                    loader.className = 'tiny_cursive-loader';\n                    loaderDiv.appendChild(loader);\n                    content.appendChild(loaderDiv);\n                }\n\n                document.querySelectorAll('.tiny_cursive-nav-tab .active').forEach(el => el.classList.remove('active'));\n                e.target.classList.add('active');\n\n                if (replayInstances && replayInstances[userid]) {\n                    replayInstances[userid].stopReplay();\n                }\n\n                if (questionid) {\n                    video_playback(userid, filepath, questionid);\n                } else {\n                    video_playback(userid, filepath);\n                }\n            }\n        });\n    }\n\n    quality(userid, templates, context, questionid = '', replayInstances = null, cmid) {\n        let metricsData = '';\n        const nodata = document.createElement('p');\n        nodata.classList.add('text-center', 'p-5', 'bg-light', 'rounded', 'm-5', 'text-primary');\n        nodata.style.verticalAlign = 'middle';\n        nodata.style.textTransform = 'uppercase';\n        nodata.style.fontWeight = '500';\n        getString('nopaylod', 'tiny_cursive').then(str => {\n            nodata.textContent = str;\n            return true;\n        }).catch(error => window.console.error(error));\n\n        $('body').on('click', '#quality' + userid + questionid, function(e) {\n\n            $(this).prop('disabled', true);\n            $('#rep' + userid + questionid).prop('disabled', false);\n            e.preventDefault();\n            $('.tiny_cursive-nav-tab').find('.active').removeClass('active');\n            $(this).addClass('active'); // Add 'active' class to the clicked element\n\n            let res = getContent([{\n                methodname: 'cursive_get_quality_metrics',\n                args: {\"file_id\": context.tabledata.file_id ?? userid, cmid: cmid},\n            }]);\n\n            const content = document.getElementById('content' + userid);\n            if (content) {\n                content.innerHTML = '';\n                const loaderDiv = document.createElement('div');\n                loaderDiv.className = 'd-flex justify-content-center my-5';\n                const loader = document.createElement('div');\n                loader.className = 'tiny_cursive-loader';\n                loaderDiv.appendChild(loader);\n                content.appendChild(loaderDiv);\n            }\n\n            if (replayInstances && replayInstances[userid]) {\n                replayInstances[userid].stopReplay();\n            }\n\n            templates.render('tiny_cursive/quality_chart', context).then(function(html) {\n                const content = document.getElementById('content' + userid);\n\n                res[0].done(response => {\n                    if (response.status) {\n                        metricsData = response.data;\n                        let proUser = metricsData.quality_access;\n\n                        if (!proUser) {\n                            // eslint-disable-next-line promise/no-nesting\n                            templates.render('tiny_cursive/upgrade_to_pro', []).then(function(html) {\n                                $('#content' + userid).html(html);\n                                return true;\n                            }).fail(function(error) {\n                                window.console.error(error);\n                            });\n                        } else {\n\n                            if (content) {\n                                content.innerHTML = html;\n                            }\n                            if (!metricsData) {\n                                $('#content' + userid).html(nodata);\n                            }\n                            //  MetricsData.p_burst_cnt,'P-burst Count', metricsData.total_active_time, 'Total Active Time',\n                            var originalData = [\n                                metricsData.word_len_mean, metricsData.edits, metricsData.p_burst_mean,\n                                metricsData.q_count, metricsData.sentence_count,\n                                metricsData.verbosity, metricsData.word_count, metricsData.sent_word_count_mean\n                            ];\n\n                            // eslint-disable-next-line promise/no-nesting\n                            Promise.all([\n                                getString('word_len_mean', 'tiny_cursive'),\n                                getString('edits', 'tiny_cursive'),\n                                getString('p_burst_mean', 'tiny_cursive'),\n                                getString('q_count', 'tiny_cursive'),\n                                getString('sentence_count', 'tiny_cursive'),\n                                getString('verbosity', 'tiny_cursive'),\n                                getString('word_count', 'tiny_cursive'),\n                                getString('sent_word_count_mean', 'tiny_cursive'),\n                                getString('average', 'tiny_cursive'),\n                            ]).then(([wordLength, edits, pBurstMean, qCount, sentenceCount, verbosity, wordCount,\n                                sentWordCountMean, average]) => {\n                                let chartvas = document.querySelector('#chart' + userid);\n                                let levels = [wordLength, edits, pBurstMean, qCount, sentenceCount, verbosity, wordCount,\n                                    sentWordCountMean];\n\n                                const data = {\n                                    labels: [\n                                        levels\n                                    ],\n                                    datasets: [{\n                                        data: originalData.map(d => {\n                                            if (d > 100) {\n                                                return 100;\n                                            } else if (d < -100) {\n                                                return -100;\n                                            } else {\n                                                return d;\n                                            }\n                                        }),\n                                        backgroundColor: function(context) {\n                                            // Apply green or gray depending on value.\n                                            const value = context.raw;\n\n                                            if (value > 0 && value < 100) {\n                                                return '#43BB97';\n                                            } else if (value < 0) {\n                                                return '#AAAAAA';\n                                            } else {\n                                                return '#00432F'; // Green for positive, gray for negative.\n                                            }\n\n                                        },\n                                        barPercentage: 0.75,\n                                    }]\n                                };\n\n                                const drawPercentage = {\n                                    id: 'drawPercentage',\n                                    afterDraw: (chart) => {\n                                        const {ctx, data} = chart;\n                                        ctx.save();\n                                        let value;\n                                        chart.getDatasetMeta(0).data.forEach((dataPoint, index) => {\n                                            value = parseInt(data.datasets[0].data[index]);\n                                            if (!value) {\n                                                value = 0;\n                                            }\n                                            value = originalData[index];\n\n                                            ctx.font = \"bold 14px sans-serif\";\n\n                                            if (value > 50 && value <= 100) {\n                                                ctx.fillStyle = 'white';\n                                                ctx.textAlign = 'right';\n                                                ctx.fillText(value + '%', dataPoint.x - 5, dataPoint.y + 5);\n                                            } else if (value <= 10 && value > 0) {\n                                                ctx.fillStyle = '#43bb97';\n                                                ctx.textAlign = 'left';\n                                                if (value >= 1) {\n                                                    ctx.fillText('0' + value + '%', dataPoint.x + 5, dataPoint.y + 5);\n                                                } else {\n                                                    ctx.fillText(value + '%', dataPoint.x + 5, dataPoint.y + 5);\n                                                }\n                                                // eslint-disable-next-line no-empty\n                                            } else if (value == 0 || value == undefined) {\n                                            } else if (value > 100) {\n                                                ctx.fillStyle = 'white';\n                                                ctx.textAlign = 'right';\n                                                ctx.fillText(value + '%', dataPoint.x - 5, dataPoint.y + 5);\n                                            } else if (value < -50 && value >= -100) {\n                                                ctx.fillStyle = 'white';\n                                                ctx.textAlign = 'left';\n                                                ctx.fillText(value + '%', dataPoint.x + 5, dataPoint.y + 5);\n                                            } else if (value < -100) {\n                                                ctx.fillStyle = 'white';\n                                                ctx.textAlign = 'left';\n                                                ctx.fillText(value + '%', dataPoint.x + 5, dataPoint.y + 5);\n                                            } else if (value > -50 && value < 0) {\n                                                ctx.fillStyle = 'grey';\n                                                ctx.textAlign = 'right';\n                                                ctx.fillText(value + '%', dataPoint.x - 5, dataPoint.y + 5);\n                                            } else {\n                                                ctx.fillStyle = '#43bb97';\n                                                ctx.textAlign = 'left';\n                                                ctx.fillText(value + '%', dataPoint.x + 5, dataPoint.y + 5);\n                                            }\n\n                                        });\n                                    }\n                                };\n\n                                const chartAreaBg = {\n                                    id: 'chartAreaBg',\n                                    beforeDraw: (chart) => {\n                                        const {ctx, scales: {x, y}} = chart;\n                                        ctx.save();\n\n                                        const segmentPixel = y.getPixelForValue(y.ticks[0].value) -\n                                            y.getPixelForValue(y.ticks[1].value);\n                                        const doubleSegment = y.ticks[2].value - y.ticks[0].value;\n                                        let tickArray = [];\n\n                                        // Generate tick values.\n                                        for (let i = 0; i <= y.max; i += doubleSegment) {\n                                            if (i !== y.max) {\n                                                tickArray.push(i);\n                                            }\n                                        }\n\n                                        // Draw the background rectangles for each tick.\n                                        tickArray.forEach(tick => {\n                                            ctx.fillStyle = 'rgba(0, 0, 0, 0.02)';\n                                            ctx.fillRect(0, y.getPixelForValue(tick) + 80, x.width + x.width + 21, segmentPixel);\n                                        });\n                                    }\n                                };\n\n\n                                return new Chart(chartvas, {\n                                    type: 'bar',\n                                    data: data,\n                                    options: {\n                                        responsive: false,\n                                        maintainAspectRatio: false,\n                                        indexAxis: 'y',\n                                        elements: {\n                                            bar: {\n                                                borderRadius: 16,\n                                                borderWidth: 0,\n                                                zIndex: 1,\n                                            }\n                                        },\n                                        scales: {\n                                            x: {\n                                                beginAtZero: true,\n                                                min: -100,\n                                                max: 100,\n                                                ticks: {\n                                                    callback: function(value) {\n                                                        if (value === -100 || value === 100) {\n                                                            return value + '%';\n                                                        } else if (value === 0) {\n                                                            return average;\n                                                        }\n                                                        return '';\n                                                    },\n                                                    display: true,\n                                                    font: function(context) {\n                                                        if (context && context.tick && context.tick.value === 0) {\n                                                            return {\n                                                                weight: 'bold',\n                                                                size: 14,\n                                                                color: 'black'\n                                                            };\n                                                        }\n                                                        return {\n                                                            weight: 'bold',\n                                                            size: 13,\n                                                            color: 'black'\n                                                        };\n                                                    },\n                                                    color: 'black',\n\n                                                },\n                                                grid: {\n                                                    display: true,\n                                                    color: function(context) {\n                                                        return context.tick.value === 0 ? 'black' : '#eaeaea';\n                                                    },\n                                                    tickLength: 0,\n                                                },\n                                                position: 'top'\n\n                                            },\n                                            y: {\n                                                beginAtZero: true,\n                                                ticks: {\n                                                    display: true,\n                                                    align: 'center',\n\n                                                    crossAlign: 'far',\n                                                    font: {\n                                                        size: 18,\n                                                    },\n                                                    tickLength: 100,\n                                                    color: 'black',\n                                                },\n                                                grid: {\n                                                    display: true,\n                                                    tickLength: 1000,\n                                                },\n\n                                            }\n                                        },\n                                        plugins: {\n                                            legend: {\n                                                display: false,\n                                            },\n                                            title: {\n                                                display: false,\n                                            },\n                                            tooltip: {\n                                                yAlign: 'bottom',\n                                                xAlign: 'center',\n                                                callbacks: {\n                                                    label: function(context) {\n                                                        const originalValue = originalData[context.dataIndex];\n                                                        return originalValue; // Show the original value.\n                                                    },\n                                                },\n                                            },\n                                        }\n                                    },\n                                    plugins: [chartAreaBg, drawPercentage]\n                                });\n                            }).catch(error => {\n                                window.console.log(error);\n                            });\n\n                        }\n                    }\n                }).fail(error => {\n                    $('#content' + userid).html(nodata);\n                    throw new Error('Error: no data received yet', error);\n                });\n                return true;\n            }).catch(function(error) {\n                window.console.error(\"Failed to render template:\", error);\n            });\n\n            document.querySelectorAll('.tiny_cursive-nav-tab .active').forEach(el => el.classList.remove('active'));\n            e.target.classList.add('active');\n        });\n    }\n\n    formatedTime(data) {\n        if (data.total_time_seconds) {\n            let totalTimeSeconds = data.total_time_seconds;\n            let hours = Math.floor(totalTimeSeconds / 3600).toString().padStart(2, 0);\n            let minutes = Math.floor((totalTimeSeconds % 3600) / 60).toString().padStart(2, 0);\n            let seconds = (totalTimeSeconds % 60).toString().padStart(2, 0);\n            return `${hours}h ${minutes}m ${seconds}s`;\n        } else {\n            return \"0h 0m 0s\";\n        }\n    }\n\n    authorshipStatus(firstFile, score, scoreSetting) {\n        var icon = 'fa fa-circle-o';\n        var color = 'font-size:32px;color:black';\n        score = parseFloat(score);\n\n        if (firstFile) {\n            icon = 'fa fa-solid fa-info-circle';\n            color = 'font-size:32px;color:#000000';\n        } else if (score >= scoreSetting) {\n            icon = 'fa fa-check-circle';\n            color = 'font-size:32px;color:green';\n        } else if (score < scoreSetting) {\n            icon = 'fa fa-question-circle';\n            color = 'font-size:32px;color:#A9A9A9';\n        }\n\n        const iconElement = document.createElement('i');\n        iconElement.className = icon;\n        iconElement.style = color;\n        return iconElement;\n    }\n}\n"],"names":["createModal","userid","context","questionid","authIcon","element","document","getElementById","addEventListener","e","preventDefault","create","templateContext","then","modal","content","querySelector","innerHTML","outerHTML","show","catch","error","window","console","analytics","templates","replayInstances","body","target","id","repElement","getAttribute","setAttribute","loaderDiv","createElement","className","loader","appendChild","stopReplay","querySelectorAll","forEach","el","classList","remove","add","render","html","firstCell","checkDiff","fileid","nodata","style","verticalAlign","textTransform","fontWeight","textContent","Error","methodname","args","done","response","responsedata","JSON","parse","data","submittedText","atob","submitted_text","Str","get_strings","key","component","strings","originalTextString","editsPastesAIString","commentBox","pasteCountDiv","commentscount","commentsDiv","commentsList","comments","index","commentDiv","usercomment","legend","attributedItem","attributedBox","attributedText","unattributedItem","unattributedBox","unattributedText","contents","textBlock2","message","replyWriting","filepath","replyBtn","video_playback","quality","cmid","metricsData","str","on","this","prop","find","removeClass","addClass","res","tabledata","file_id","status","quality_access","originalData","word_len_mean","edits","p_burst_mean","q_count","sentence_count","verbosity","word_count","sent_word_count_mean","Promise","all","_ref","wordLength","pBurstMean","qCount","sentenceCount","wordCount","sentWordCountMean","average","chartvas","labels","datasets","map","d","backgroundColor","value","raw","barPercentage","drawPercentage","afterDraw","chart","ctx","save","getDatasetMeta","dataPoint","parseInt","font","fillStyle","textAlign","fillText","x","y","undefined","Chart","type","options","responsive","maintainAspectRatio","indexAxis","elements","bar","borderRadius","borderWidth","zIndex","scales","beginAtZero","min","max","ticks","callback","display","tick","weight","size","color","grid","tickLength","position","align","crossAlign","plugins","title","tooltip","yAlign","xAlign","callbacks","label","dataIndex","beforeDraw","segmentPixel","getPixelForValue","doubleSegment","tickArray","i","push","fillRect","width","log","fail","formatedTime","total_time_seconds","totalTimeSeconds","Math","floor","toString","padStart","authorshipStatus","firstFile","score","scoreSetting","icon","parseFloat","iconElement"],"mappings":"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"}