{"version":3,"file":"autosaver.min.js","sources":["../src/autosaver.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * @module     tiny_cursive/autosaver\n * @category   TinyMCE Editor\n * @copyright  CTI <info@cursivetechnology.com>\n * @author     Brain Station 23 <sales@brainstation-23.com>\n */\n\nimport {call} from 'core/ajax';\nimport {create} from 'core/modal_factory';\nimport {get_string as getString} from 'core/str';\nimport {save, cancel, hidden} from 'core/modal_events';\n\nexport const register = (editor, interval, userId) => {\n\n    var is_student, intervention;\n\n    var bodyElement = document.querySelector('#body');\n    if (bodyElement) {\n        is_student = !bodyElement.classList.contains('teacher_admin'); // true or false\n        intervention = bodyElement.classList.contains('intervention'); // true or false\n    } else {\n        window.console.error('#body element not found');\n    }\n\n\n    var userid = userId;\n    var host = M.cfg.wwwroot;\n    var courseid = M.cfg.courseId;\n    var filename = \"\";\n    var ed = \"\";\n    var event = \"\";\n    var resourceId = 0;\n    var modulename = \"\";\n    var editorid = editor?.id;\n    var cmid = M.cfg.contextInstanceId;\n    var questionid = 0;\n    var syncInterval = interval ? interval * 1000 : 10000; // Default: Sync Every 10s.\n    const assignSubmit = document.getElementById('id_submitbutton');\n    const quizSubmit = document.getElementById('mod_quiz-next-nav');\n\n    const postOne = async (methodname, args) => {\n        try {\n            const response = await call([{\n                methodname,\n                args,\n            }])[0];\n            return response;\n        } catch (error) {\n            window.console.error('Error in postOne:', error);\n            throw error;\n        }\n    };\n\n    if (document.getElementById('page-mod-assign-editsubmission') ||\n     document.getElementById('page-mod-forum-post') || document.getElementById('page-mod-forum-view')) {\n        if (assignSubmit) {\n            assignSubmit.addEventListener('click', async function(e) {\n                e.preventDefault();\n                if (filename) {\n                    await SyncData().then(() => {\n                        // eslint-disable-next-line no-caller\n                        assignSubmit.removeEventListener('click', arguments.callee);\n                        assignSubmit.click();\n                        // eslint-disable-next-line no-caller\n                        assignSubmit.removeEventListener('click', arguments.callee);\n                    });\n                } else {\n                    // eslint-disable-next-line no-caller\n                    assignSubmit.removeEventListener('click', arguments.callee);\n                    assignSubmit.click();\n                    // eslint-disable-next-line no-caller\n                    assignSubmit.removeEventListener('click', arguments.callee);\n                }\n            });\n        }\n    }\n\n    if (document.getElementById('page-mod-quiz-attempt')) {\n        if (quizSubmit) {\n            quizSubmit.addEventListener('click', async () => {\n                if (filename) {\n                    await SyncData().then(() => {\n                        document.querySelector('#responseform').submit();\n                    });\n                }\n\n            });\n        }\n    }\n\n    const getModal = (e) => {\n\n        Promise.all([\n            getString('tiny_cursive_srcurl', 'tiny_cursive'),\n            getString('tiny_cursive_srcurl_des', 'tiny_cursive'),\n            getString('tiny_cursive_placeholder', 'tiny_cursive')\n        ]).then(function([title, titledes, placeholder]) {\n\n            return create({\n                type: 'SAVE_CANCEL',\n                title: `<div><div class=\"tiny-cursive-title-text\">${title}</div>\n                <span class=\"tiny-cursive-title-description \">${titledes}</span></div>`,\n                body: `<textarea  class=\"form-control inputUrl\" value=\"\" id=\"inputUrl\" placeholder=\"${placeholder}\"></textarea>`,\n\n                removeOnClose: true,\n            })\n                .done(modal => {\n                    modal.getRoot().addClass('tiny-cursive-modal');\n                    modal.show();\n\n                    var lastEvent = '';\n                    // eslint-disable-next-line\n                    modal.getRoot().on(save, function() {\n                        var number = document.getElementById(\"inputUrl\").value;\n                        if (number === \"\" || number === null || number === undefined) {\n                            editor.execCommand('Undo');\n                            // eslint-disable-next-line\n                           getString('pastewarning', 'tiny_cursive').then(str => alert(str));\n                        } else {\n                            editor.execCommand('Paste');\n                        }\n                        let ur = e.srcElement.baseURI;\n                        let resourceId = 0;\n                        let parm = new URL(ur);\n                        let modulename = \"\";\n                        let editorid = editor?.id;\n                        let courseid = M.cfg.courseId;\n                        let cmid = M.cfg.contextInstanceId;\n\n                        // eslint-disable-next-line\n                        if (ur.includes(\"attempt.php\") || ur.includes(\"forum\") || ur.includes(\"assign\") || ur.includes(\"lesson\") || ur.includes(\"oublog\")) { } else {\n                            return false;\n                        }\n                        if (ur.includes(\"forum\") && !ur.includes(\"assign\")) {\n                            resourceId = parm.searchParams.get('edit');\n                        }\n                        if (!ur.includes(\"forum\") && !ur.includes(\"assign\")) {\n                            resourceId = parm.searchParams.get('attempt');\n                        }\n\n                        if (resourceId === null) {\n                            resourceId = 0;\n                        }\n                        if (ur.includes(\"forum\")) {\n                            modulename = \"forum\";\n                        }\n                        if (ur.includes(\"assign\")) {\n                            modulename = \"assign\";\n                            resourceId = cmid;\n                        }\n                        if (ur.includes(\"attempt\")) {\n                            modulename = \"quiz\";\n                        }\n                        if (ur.includes(\"lesson\")) {\n                            modulename = \"lesson\";\n                            resourceId = cmid;\n                        }\n                        if (ur.includes(\"oublog\")) {\n                            modulename = \"oublog\";\n                            resourceId = 0;\n                        }\n                        if (cmid === null) {\n                            cmid = 0;\n                        }\n\n                        postOne('cursive_user_comments', {\n                            modulename: modulename,\n                            cmid: cmid,\n                            resourceid: resourceId,\n                            courseid: courseid,\n                            usercomment: number,\n                            timemodified: Date.now(),\n                            editorid: editorid ? editorid : \"\"\n                        });\n                        lastEvent = 'save';\n                        modal.destroy();\n                    });\n                    modal.getRoot().on(cancel, function() {\n\n                        editor.execCommand('Undo');\n                        lastEvent = 'cancel';\n                    });\n                    modal.getRoot().on(hidden, function() {\n                        if (lastEvent != 'cancel' && lastEvent != 'save') {\n                            editor.execCommand('Undo');\n                        }\n                    });\n                    return modal;\n                });\n        });\n\n    };\n\n    const sendKeyEvent = (events, eds) => {\n        let ur = eds.srcElement.baseURI;\n        let parm = new URL(ur);\n        ed = eds;\n        event = events;\n        // eslint-disable-next-line\n        if (ur.includes(\"attempt.php\") || ur.includes(\"forum\") || ur.includes(\"assign\") || ur.includes(\"lesson\") || ur.includes(\"oublog\")) { } else {\n            return false;\n        }\n        if (ur.includes(\"forum\") && !ur.includes(\"assign\")) {\n            resourceId = parm.searchParams.get('edit');\n        } else {\n            resourceId = parm.searchParams.get('attempt');\n        }\n        if (resourceId === null) {\n            resourceId = 0;\n        }\n\n        if (ur.includes(\"forum\")) {\n            modulename = \"forum\";\n        }\n        if (ur.includes(\"assign\")) {\n            modulename = \"assign\";\n            resourceId = cmid;\n        }\n        if (ur.includes(\"attempt\")) {\n            modulename = \"quiz\";\n        }\n        if (ur.includes(\"lesson\")) {\n            modulename = \"lesson\";\n            resourceId = cmid;\n        }\n        if (ur.includes(\"oublog\")) {\n            modulename = \"oublog\";\n            resourceId = 0;\n        }\n\n        filename = `${userid}_${resourceId}_${cmid}_${modulename}_attempt`;\n\n        if (modulename === 'quiz') {\n            questionid = editorid.split(':')[1].split('_')[0];\n            filename = `${userid}_${resourceId}_${cmid}_${questionid}_${modulename}_attempt`;\n        }\n        if (ed.key !== \"Process\") {\n            if (localStorage.getItem(filename)) {\n\n                let data = JSON.parse(localStorage.getItem(filename));\n                data.push({\n                    resourceId: resourceId,\n                    key: ed.key,\n                    keyCode: ed.keyCode,\n                    event: event,\n                    courseId: courseid,\n                    unixTimestamp: Date.now(),\n                    clientId: host,\n                    personId: userid\n                });\n                localStorage.setItem(filename, JSON.stringify(data));\n            } else {\n                let data = [];\n                data.push({\n                    resourceId: resourceId,\n                    key: ed.key,\n                    keyCode: ed.keyCode,\n                    event: event,\n                    courseId: courseid,\n                    unixTimestamp: Date.now(),\n                    clientId: host,\n                    personId: userid\n                });\n                localStorage.setItem(filename, JSON.stringify(data));\n            }\n        }\n    };\n\n    editor.on('keyUp', (editor) => {\n        sendKeyEvent(\"keyUp\", editor);\n    });\n\n    editor.on('Paste', async (e) => {\n        if (is_student && intervention) {\n            getModal(e);\n        }\n    });\n\n    editor.on('Redo', async (e) => {\n        if (is_student && intervention) {\n            getModal(e);\n        }\n    });\n\n    editor.on('keyDown', (editor) => {\n        sendKeyEvent(\"keyDown\", editor);\n    });\n    // eslint-disable-next-line\n    editor.on('init', () => {\n    });\n\n    /**\n     * Synchronizes data from localStorage to server\n     * @async\n     * @function SyncData\n     * @description Retrieves stored keypress data from localStorage and sends it to server\n     * @returns {Promise} Returns response from server if data exists and is successfully sent\n     * @throws {Error} Logs error to console if data submission fails\n     */\n    async function SyncData() {\n\n        let data = localStorage.getItem(filename);\n\n        if (!data || data.length === 0) {\n            return;\n        } else {\n            localStorage.removeItem(filename);\n            let originalText = editor.getContent({ format: 'text' });\n            try {\n                return await postOne('cursive_write_local_to_json', {\n                    key: ed.key,\n                    event: event,\n                    keyCode: ed.keyCode,\n                    resourceId: resourceId,\n                    cmid: cmid,\n                    modulename: modulename,\n                    editorid: editorid,\n                    json_data: data,\n                    originalText: originalText\n                });\n            } catch (error) {\n                window.console.error('Error submitting data:', error);\n            }\n        }\n    }\n\n    window.addEventListener('unload', () => {\n        SyncData();\n    });\n\n    setInterval(SyncData, syncInterval);\n};\n"],"names":["editor","interval","userId","is_student","intervention","bodyElement","document","querySelector","classList","contains","window","console","error","userid","host","M","cfg","wwwroot","courseid","courseId","filename","ed","event","resourceId","modulename","editorid","id","cmid","contextInstanceId","questionid","syncInterval","assignSubmit","getElementById","quizSubmit","postOne","async","methodname","args","addEventListener","e","preventDefault","SyncData","then","removeEventListener","arguments","callee","click","submit","getModal","Promise","all","title","titledes","placeholder","type","body","removeOnClose","done","modal","getRoot","addClass","show","lastEvent","on","save","number","value","execCommand","str","alert","ur","srcElement","baseURI","parm","URL","includes","searchParams","get","resourceid","usercomment","timemodified","Date","now","destroy","cancel","hidden","sendKeyEvent","events","eds","split","key","localStorage","getItem","data","JSON","parse","push","keyCode","unixTimestamp","clientId","personId","setItem","stringify","length","removeItem","originalText","getContent","format","json_data","setInterval"],"mappings":"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"}