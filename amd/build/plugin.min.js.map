{"version":3,"file":"plugin.min.js","sources":["../src/plugin.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * @module     tiny_cursive/plugin\n * @category TinyMCE Editor\n * @copyright  CTI <info@cursivetechnology.com>\n * @author Brain Station 23 <elearning@brainstation-23.com>\n */\n\nimport { getTinyMCE } from 'editor_tiny/loader';\nimport { getPluginMetadata } from 'editor_tiny/utils';\nimport { component, pluginName } from './common';\nimport * as Autosaver from './autosaver';\nimport getConfig from 'core/ajax';\nexport default new Promise((resolve, reject) => {\n    const page = [\n        'page-mod-assign-editsubmission',\n        'page-mod-quiz-attempt',\n        'page-mod-forum-view',\n        'page-mod-forum-post'];\n\n    Promise.all([\n        getTinyMCE(),\n        getPluginMetadata(component, pluginName),\n    ])\n        .then(([tinyMCE, pluginMetadata]) => {\n            tinyMCE.PluginManager.add(pluginName, (editor) => {\n                getConfig.call([{\n                    methodname: \"cursive_get_config\",\n                    args: { courseid: M.cfg.courseId, cmid: M.cfg.contextInstanceId }\n                }])[0].done((data) => {\n                    if (data.status && page.includes(document.body.id)) {\n                        Autosaver.register(editor, data.sync_interval, data.userid);\n                    }\n                }).fail((error) => {\n                    window.console.error('Error getting cursive config:', error);\n                });\n\n                return pluginMetadata;\n            });\n            resolve(pluginName);\n        })\n        .catch((error) => {\n            reject(error);\n        });\n});\n"],"names":["Promise","resolve","reject","page","all","component","pluginName","then","_ref","tinyMCE","pluginMetadata","PluginManager","add","editor","call","methodname","args","courseid","M","cfg","courseId","cmid","contextInstanceId","done","data","status","includes","document","body","id","Autosaver","register","sync_interval","userid","fail","error","window","console","catch"],"mappings":"gwCA2Be,IAAIA,SAAQ,CAACC,QAASC,gBAC3BC,KAAO,CACT,iCACA,wBACA,sBACA,uBAEJH,QAAQI,IAAI,EACR,yBACA,4BAAkBC,kBAAWC,sBAE5BC,MAAKC,WAAEC,QAASC,qBACbD,QAAQE,cAAcC,IAAIN,oBAAaO,uBACzBC,KAAK,CAAC,CACZC,WAAY,qBACZC,KAAM,CAAEC,SAAUC,EAAEC,IAAIC,SAAUC,KAAMH,EAAEC,IAAIG,sBAC9C,GAAGC,MAAMC,OACLA,KAAKC,QAAUtB,KAAKuB,SAASC,SAASC,KAAKC,KAC3CC,UAAUC,SAASlB,OAAQW,KAAKQ,cAAeR,KAAKS,WAEzDC,MAAMC,QACLC,OAAOC,QAAQF,MAAM,gCAAiCA,UAGnDzB,kBAEXT,QAAQK,uBAEXgC,OAAOH,QACJjC,OAAOiC"}