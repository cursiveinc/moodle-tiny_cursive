{"version":3,"file":"show_url_in_quiz_detail.min.js","sources":["../src/show_url_in_quiz_detail.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * @module     tiny_cursive/show_url_in_quiz_detail\n * @category TinyMCE Editor\n * @copyright  CTI <info@cursivetechnology.com>\n * @author kuldeep singh <mca.kuldeep.sekhon@gmail.com>\n */\n\ndefine([\"jquery\", \"core/ajax\", \"core/str\", \"core/templates\", \"./replay\", \"./analytic_button\", \"./analytic_events\"], function(\n    $,\n    AJAX,\n    str,\n    templates,\n    Replay,\n    analyticButton,\n    AnalyticEvents\n) {\n    const replayInstances = {};\n    // eslint-disable-next-line\n    window.video_playback = function (mid, filepath, questionid) {\n        if (filepath !== '') {\n            const replay = new Replay(\n                'content' + mid,\n                filepath,\n                10,\n                false,\n                'player_' + mid + questionid\n            );\n            replayInstances[mid] = replay;\n        } else {\n            // eslint-disable-next-line\n            templates.render('tiny_cursive/no_submission').then(html => {\n                $('#content' + mid).html(html);\n            }).catch(e => window.console.error(e));\n        }\n        return false;\n    };\n\n    var usersTable = {\n        init: function(scoreSetting, showcomment) {\n            str\n                .get_strings([\n                    {key: \"field_require\", component: \"tiny_cursive\"},\n                ])\n                .done(function() {\n                    usersTable.appendSubmissionDetail(scoreSetting, showcomment);\n                });\n        },\n        appendSubmissionDetail: function(scoreSetting, showcomment) {\n            let subUrl = window.location.href;\n            let parm = new URL(subUrl);\n            let attemptId = parm.searchParams.get('attempt');\n            let cmid = M.cfg.contextInstanceId;\n            var userid = '';\n            var tableRow = $('table.generaltable.generalbox.quizreviewsummary tbody tr');\n            tableRow.each(function() {\n                var href = $(this).find('a[href*=\"/user/view.php\"]').attr('href');\n                if (href) {\n                    var id = href.match(/id=(\\d+)/);\n                    if (id) {\n                        userid = id[1];\n                    }\n                }\n            });\n\n            $('#page-mod-quiz-review .info').each(function() {\n\n                var editQuestionLink = $(this).find('.editquestion a[href*=\"question/bank/editquestion/question.php\"]');\n                var questionid = 0;\n                if (editQuestionLink.length > 0) {\n                    editQuestionLink = editQuestionLink.attr('href');\n                    questionid = editQuestionLink.match(/&id=(\\d+)/)[1];\n                }\n\n                let args = {id: attemptId, modulename: \"quiz\", \"cmid\": cmid, \"questionid\": questionid, \"userid\": userid};\n                let methodname = 'cursive_get_comment_link';\n                let com = AJAX.call([{methodname, args}]);\n                com[0].done(function(json) {\n                    var data = JSON.parse(json);\n\n                    if (data.data.filename) {\n\n                        var content = $('.que.essay .editquestion a[href*=\"question/bank/editquestion/question.php\"][href*=\"&id='\n                            + data.data.questionid + '\"]');\n                        if (data.usercomment != 'comments' && parseInt(showcomment)) {\n                            content.parent().parent().parent().find('.qtext').append('<div class=\"mb-2\">');\n                            var tt = \"\";\n                            // eslint-disable-next-line\n                            str.get_string('refer', 'tiny_cursive').then(str => {\n                                tt += '<h4>' + str + '</h4><div class = \"tiny_cursive-quiz-references rounded\" >';\n\n                                data.usercomment.forEach(element => {\n                                    tt += '<div class = \" p-3\" style=\"border-bottom:1px solid rgba(0, 0, 0, 0.1); color: #0f6cbf\">'\n                                        + element.usercomment + '</div>';\n                                });\n                                content.parent().parent().parent().find('.qtext').append(tt + '</div></div>');\n                            }).catch(error => window.console.error(error));\n                        }\n                        var filepath = '';\n                        if (data.data.filename) {\n                            filepath = data.data.filename;\n                        }\n                        let analyticButtonDiv = document.createElement('div');\n                        analyticButtonDiv.classList.add('text-center', 'mt-2');\n                        analyticButtonDiv.append(analyticButton(userid, questionid));\n                        content.parent().parent().parent().find('.qtext').append(analyticButtonDiv);\n\n                        let myEvents = new AnalyticEvents();\n                        var context = {\n                            tabledata: data.data,\n                            formattime: myEvents.formatedTime(data.data),\n                            page: scoreSetting,\n                            userid: userid,\n                            quizid: questionid,\n                        };\n\n                        let authIcon = myEvents.authorshipStatus(data.data.first_file, data.data.score, scoreSetting);\n                        myEvents.createModal(userid, context, questionid, authIcon);\n                        myEvents.analytics(userid, templates, context, questionid, replayInstances, authIcon);\n                        myEvents.checkDiff(userid, data.data.file_id, questionid, replayInstances);\n                        myEvents.replyWriting(userid, filepath, questionid, replayInstances);\n                        myEvents.quality(userid, templates, context, questionid, replayInstances, cmid);\n\n                    }\n                });\n                return com.usercomment;\n            });\n        },\n    };\n    return usersTable;\n});\n"],"names":["define","$","AJAX","str","templates","Replay","analyticButton","AnalyticEvents","replayInstances","window","video_playback","mid","filepath","questionid","replay","render","then","html","catch","e","console","error","usersTable","init","scoreSetting","showcomment","get_strings","key","component","done","appendSubmissionDetail","subUrl","location","href","attemptId","URL","searchParams","get","cmid","M","cfg","contextInstanceId","userid","each","this","find","attr","id","match","editQuestionLink","length","args","modulename","com","call","methodname","json","data","JSON","parse","filename","content","usercomment","parseInt","parent","append","tt","get_string","forEach","element","analyticButtonDiv","document","createElement","classList","add","myEvents","context","tabledata","formattime","formatedTime","page","quizid","authIcon","authorshipStatus","first_file","score","createModal","analytics","checkDiff","file_id","replyWriting","quality"],"mappings":"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"}