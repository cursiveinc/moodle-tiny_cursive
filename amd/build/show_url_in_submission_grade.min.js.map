{"version":3,"file":"show_url_in_submission_grade.min.js","sources":["../src/show_url_in_submission_grade.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * @module     tiny_cursive/show_url_in_submission_grade\n * @category TinyMCE Editor\n * @copyright  CTI <info@cursivetechnology.com>\n * @author Brain Station 23 <elearning@brainstation-23.com>\n */\n\ndefine([\n    \"core/ajax\",\n    \"core/str\",\n    \"core/templates\",\n    \"./replay\",\n    \"./analytic_button\",\n    \"./analytic_events\"\n], function (\n    AJAX,\n    str,\n    templates,\n    Replay,\n    analyticButton,\n    AnalyticEvents\n) {\n    const replayInstances = {};\n\n    window.video_playback = function (mid, filepath) {\n        if (filepath !== '') {\n            const replay = new Replay(\n                'content' + mid,\n                filepath,\n                10,\n                false,\n                'player_' + mid\n            );\n            replayInstances[mid] = replay;\n        }\n        else {\n            templates.render('tiny_cursive/no_submission').then(html => {\n                const contentElement = document.getElementById('content' + mid);\n                if (contentElement) {\n                    contentElement.innerHTML = html;\n                }\n            }).catch(e => window.console.error(e));\n        }\n        return false;\n    };\n\n    var usersTable = {\n        init: function (score_setting, showcomment) {\n\n            const graderElement = document.getElementById('page-mod-assign-grader');\n            if (graderElement) {\n                graderElement.classList.add('tiny_cursive_mod_assign_grader');\n            }\n\n            str.get_strings([{ key: \"field_require\", component: \"tiny_cursive\" }])\n                .then(() => {\n                    usersTable.appendSubmissionDetail(score_setting, showcomment);\n                });\n        },\n\n        appendSubmissionDetail: function (score_setting, showcomment) {\n\n            const divElement = document.querySelector('.path-mod-assign [data-region=\"grade-panel\"]');\n            let previousContextId = window.location.href;\n\n            const observer = new MutationObserver(function (mutations) {\n                mutations.forEach(function () {\n                    let currentContextId = window.location.href;\n                    if (currentContextId !== previousContextId) {\n                        window.location.reload();\n                        previousContextId = currentContextId;\n                    }\n                });\n            });\n\n            const config = { childList: true, subtree: true };\n            observer.observe(divElement, config);\n\n            const sub_url = window.location.href;\n            const parm = new URL(sub_url);\n            const userid = parm.searchParams.get('userid');\n            var cmid = parm.searchParams.get('id');\n\n            const args = { id: userid, modulename: \"assign\", cmid: cmid };\n            const methodname = 'cursive_get_assign_grade_comment';\n            const com = AJAX.call([{ methodname, args }]);\n\n            com[0].done(function (json) {\n                const data = JSON.parse(json);\n                let filepath = '';\n                if (data.data.filename) {\n                    filepath = data.data.filename;\n                }\n\n                if (data.usercomment !== 'comments' && parseInt(showcomment)) {\n                    const container = document.createElement('div');\n                    const row = document.createElement('div');\n                    row.classList.add('row');\n\n                    const chatbox = document.createElement('div');\n                    chatbox.classList.add('tiny_cursive-chatbox', 'tiny_cursive-chatbox22', 'tiny_cursive-chatbox--tray');\n\n                    const chatboxTitle = document.createElement('div');\n                    chatboxTitle.classList.add('tiny_cursive-chatbox__title');\n\n                    const titleH5 = document.createElement('h5');\n                    titleH5.classList.add('text-white');\n                    titleH5.textContent = \"References\";\n                    chatboxTitle.appendChild(titleH5);\n\n                    const cbody = document.createElement('div');\n                    cbody.classList.add('tiny_cursive-chatbox__body');\n\n                    chatbox.appendChild(chatboxTitle);\n                    chatbox.appendChild(cbody);\n                    row.appendChild(chatbox);\n                    container.appendChild(row);\n\n                    const gradeActionsPanel = document.querySelector('div[data-region=\"grade-actions-panel\"]');\n                    gradeActionsPanel.parentNode.insertBefore(container, gradeActionsPanel);\n\n                    const chatboxTitleClose = document.querySelector('.tiny_cursive-chatbox__title__close');\n                    chatboxTitle.addEventListener('click', function () {\n                        chatbox.classList.toggle('tiny_cursive-chatbox--tray');\n                    });\n\n                    if (chatboxTitleClose) {\n                        chatboxTitleClose.addEventListener('click', function (e) {\n                            e.stopPropagation();\n                            chatbox.classList.add('tiny_cursive-chatbox--closed');\n                        });\n                    }\n\n                    chatbox.addEventListener('transitionend', function () {\n                        if (chatbox.classList.contains('tiny_cursive-chatbox--closed')) {\n                            chatbox.remove();\n                        }\n                    });\n\n\n                    const gradePanel = document.querySelector('div[data-region=\"grade-panel\"]');\n                    if (gradePanel) {\n                        const dropdownDiv = document.createElement('div');\n                        dropdownDiv.classList.add('dropdown');\n                        gradePanel.appendChild(dropdownDiv);\n                    }\n\n                    data.usercomment.forEach(element => {\n                        const commentDiv = document.createElement('div');\n                        commentDiv.classList.add('border', 'p-2', 'shadow-sm');\n                        commentDiv.textContent = element.usercomment;\n                        cbody.appendChild(commentDiv);\n                    });\n                }\n\n                const analytic_button_div = document.createElement('div');\n                analytic_button_div.classList.add('text-center', 'mt-2');\n                analytic_button_div.appendChild(analyticButton(userid));\n\n                const gradeActions = document.querySelector('div[data-region=\"grade-actions\"]');\n                gradeActions.parentNode.insertBefore(analytic_button_div, gradeActions);\n\n                const reviewPanel = document.querySelector('div[data-region=\"review-panel\"]');\n                if (reviewPanel) {\n                    reviewPanel.classList.add('cursive_review_panel_path_mod_assign');\n                }\n\n                const gradingNavigationPanel = document.querySelector('div[data-region=\"grading-navigation-panel\"]');\n                if (gradingNavigationPanel) {\n                    gradingNavigationPanel.classList.add('cursive_grading-navigation-panel_path_mod_assign');\n                }\n\n                const gradePanel = document.querySelector('div[data-region=\"grade-panel\"]');\n                if (gradePanel) {\n                    gradePanel.classList.add('cursive_grade-panel_path_mod_assign');\n                }\n\n                const gradeActionsPanel = document.querySelector('div[data-region=\"grade-actions-panel\"]');\n                if (gradeActionsPanel) {\n                    gradeActionsPanel.classList.add('cursive_grade-actions-panel_path_mod_assign');\n                }\n\n                const myEvents = new AnalyticEvents();\n                const context = {\n                    tabledata: data.data,\n                    formattime: myEvents.formatedTime(data.data),\n                    page: score_setting,\n                    userid: userid,\n                };\n\n                const authIcon = myEvents.authorshipStatus(data.data.first_file, data.data.score, score_setting);\n                myEvents.createModal(userid, context, '', authIcon);\n                myEvents.analytics(userid, templates, context, '', replayInstances, authIcon);\n                myEvents.checkDiff(userid, data.data.file_id, '', replayInstances);\n                myEvents.replyWriting(userid, filepath, '', replayInstances);\n            });\n            return com.usercomment;\n        },\n    };\n\n    return usersTable;\n});"],"names":["define","AJAX","str","templates","Replay","analyticButton","AnalyticEvents","replayInstances","window","video_playback","mid","filepath","replay","render","then","html","contentElement","document","getElementById","innerHTML","catch","e","console","error","usersTable","init","score_setting","showcomment","graderElement","classList","add","get_strings","key","component","appendSubmissionDetail","divElement","querySelector","previousContextId","location","href","MutationObserver","mutations","forEach","currentContextId","reload","observe","childList","subtree","sub_url","parm","URL","userid","searchParams","get","cmid","args","id","modulename","com","call","methodname","done","json","data","JSON","parse","filename","usercomment","parseInt","container","createElement","row","chatbox","chatboxTitle","titleH5","textContent","appendChild","cbody","gradeActionsPanel","parentNode","insertBefore","chatboxTitleClose","addEventListener","toggle","stopPropagation","contains","remove","gradePanel","dropdownDiv","element","commentDiv","analytic_button_div","gradeActions","reviewPanel","gradingNavigationPanel","myEvents","context","tabledata","formattime","formatedTime","page","authIcon","authorshipStatus","first_file","score","createModal","analytics","checkDiff","file_id","replyWriting"],"mappings":"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"}